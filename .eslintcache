[{"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/index.js":"1","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/Rare.js":"2","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/ApplicationViews.js":"3","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/nav/NavBar.js":"4","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Register.js":"5","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Login.js":"6","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostDetail.js":"7","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostSearch.js":"8","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostForm.js":"9","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostList.js":"10","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagList.js":"11","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagProvider.js":"12","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryProvider.js":"13","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostProvider.js":"14","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryList.js":"15","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/Category.js":"16","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/PostTagList.js":"17","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/tag.js":"18","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/Post.js":"19","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/AuthProvider.js":"20","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/PostTag.js":"21","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/ListTags.js":"22","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostTable.js":"23","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/CommentProvider.js":"24","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/PostComments.js":"25","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/Comment.js":"26","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryPost.js":"27"},{"size":387,"mtime":1608076932786,"results":"28","hashOfConfig":"29"},{"size":1133,"mtime":1609861212651,"results":"30","hashOfConfig":"29"},{"size":4678,"mtime":1610070213129,"results":"31","hashOfConfig":"29"},{"size":3547,"mtime":1609861212651,"results":"32","hashOfConfig":"29"},{"size":4107,"mtime":1607793007525,"results":"33","hashOfConfig":"29"},{"size":3089,"mtime":1607793007524,"results":"34","hashOfConfig":"29"},{"size":3413,"mtime":1609548924175,"results":"35","hashOfConfig":"29"},{"size":540,"mtime":1607793007528,"results":"36","hashOfConfig":"29"},{"size":7570,"mtime":1609807008921,"results":"37","hashOfConfig":"29"},{"size":2071,"mtime":1609861212652,"results":"38","hashOfConfig":"29"},{"size":3317,"mtime":1608095639036,"results":"39","hashOfConfig":"29"},{"size":1913,"mtime":1608095639037,"results":"40","hashOfConfig":"29"},{"size":1874,"mtime":1610070213130,"results":"41","hashOfConfig":"29"},{"size":3076,"mtime":1610070213131,"results":"42","hashOfConfig":"29"},{"size":3559,"mtime":1610070213129,"results":"43","hashOfConfig":"29"},{"size":855,"mtime":1610070213129,"results":"44","hashOfConfig":"29"},{"size":1198,"mtime":1607793007529,"results":"45","hashOfConfig":"29"},{"size":519,"mtime":1608095639039,"results":"46","hashOfConfig":"29"},{"size":997,"mtime":1608078068945,"results":"47","hashOfConfig":"29"},{"size":845,"mtime":1609861212651,"results":"48","hashOfConfig":"29"},{"size":326,"mtime":1607793007529,"results":"49","hashOfConfig":"29"},{"size":114,"mtime":1607793007529,"results":"50","hashOfConfig":"29"},{"size":5486,"mtime":1610070213131,"results":"51","hashOfConfig":"29"},{"size":3484,"mtime":1608391526411,"results":"52","hashOfConfig":"29"},{"size":6216,"mtime":1609807008920,"results":"53","hashOfConfig":"29"},{"size":1116,"mtime":1609548924173,"results":"54","hashOfConfig":"29"},{"size":1096,"mtime":1610070240207,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"k1i1yd",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/index.js",[],["124","125"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/Rare.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/ApplicationViews.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/nav/NavBar.js",["126","127"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Register.js",["128","129"],"import React, { useRef } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const username = useRef()\n    const password = useRef()\n    const verifyPassword = useRef()\n    const passwordDialog = useRef()\n    const bio = useRef()\n    const profileUrl = useRef()\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (password.current.value === verifyPassword.current.value) {\n            const newUser = {\n                \"first_name\": firstName.current.value,\n                \"last_name\": lastName.current.value,\n                \"email\": email.current.value,\n                \"username\": username.current.value,\n                \"bio\": bio.current.value,\n                \"profile_image_url\": profileUrl.current.value,\n                \"password\": password.current.value,\n            }\n\n            return fetch(\"http://127.0.0.1:8000/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify(newUser)\n            })\n                .then(res => res.json())\n                .then(res => {\n                    if (\"token\" in res) {\n                        localStorage.setItem(\"rare_user_id\", res.token)\n                        props.history.push(\"/\")\n                    }\n                })\n        } else {\n            passwordDialog.current.showModal()\n        }\n    }\n\n    return (\n        <main className=\"container-md vh-100\">\n            <dialog className=\"dialog dialog--password\" ref={passwordDialog}>\n                <div>Passwords do not match</div>\n                    <button className=\"button--close\" onClick={e => passwordDialog.current.close()}>Close</button>\n            </dialog>\n            <header className=\"mt-5 text-center\">\n                <h1>Rare</h1>\n            </header>\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <div className=\"d-flex flex-row justify-content-center align-items-center mt-5\">\n                    <div className=\"d-flex flex-column w-100 text-center mr-5\">\n                        <img className=\"mb-5 img-fluid\" src=\"https://via.placeholder.com/300x200\" />\n                        <input ref={firstName} name=\"firstName\" type=\"text\" id=\"register--first-name\" className=\"form-control mb-5\" placeholder=\"First Name\" required autoFocus />\n                        <input ref={lastName} name=\"lastname\" type=\"text\" id=\"register--last-name\" className=\"form-control mb-5\" placeholder=\"Last Name\" required />\n                        <input ref={email} name=\"email\" type=\"email\" id=\"register--email\" className=\"form-control mb-5\" placeholder=\"Email\" required />\n                    </div>\n                    <div className=\"d-flex flex-column w-100 text-center\">\n                        <input ref={username} name=\"username\" type=\"text\" id=\"register--username\" className=\"form-control mb-5\" placeholder=\"Username\" required />\n                        <input ref={password} name=\"password\" type=\"password\" id=\"register--password\" className=\"form-control mb-5\" placeholder=\"Password\" required />\n                        <input ref={verifyPassword} name=\"verifyPassword\" type=\"password\" id=\"register--verify-password\" className=\"form-control mb-5\" placeholder=\"Verify Password\" required />\n                        <input ref={profileUrl} name=\"profileUrl\" type=\"text\" id=\"register--profile-pic\" className=\"form-control mb-5\" placeholder=\"Profile Pic URL\" required />\n                        <textarea ref={bio} name=\"bio\" type=\"text\" id=\"register--bio\" className=\"form-control mb-5\" placeholder=\"Bio\" rows=\"4\" required />\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <button className=\"btn btn-outline-primary w-50\" type=\"submit\">Register</button>\n                </div>\n            </form>\n        </main>\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Login.js",["130"],"import React, { useRef } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport \"./Auth.css\"\n\nexport const Login = () => {\n    const username = useRef()\n    const password = useRef()\n    const invalidDialog = useRef()\n    const errorDialog = useRef()\n    const history = useHistory()\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        return fetch('http://127.0.0.1:8000/login', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: username.current.value,\n                password: password.current.value\n            })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (\"valid\" in res && res.valid) {\n                    localStorage.setItem(\"rare_user_id\", res.token)\n                    history.push(\"/\")\n                }\n                else {\n                    invalidDialog.current.showModal()\n                }\n            })\n            .catch(err => errorDialog.current.showModal())\n    }\n\n    return (\n        <main className=\"container vh-100\">\n            <dialog className=\"dialog dialog--auth\" ref={invalidDialog}>\n                <div>Email or password was not valid.</div>\n                <button className=\"button--close\" onClick={e => invalidDialog.current.close()}>Close</button>\n            </dialog>\n            <dialog className=\"dialog dialog--auth\" ref={errorDialog}>\n                <div>Could not contact server.</div>\n                <button className=\"button--close\" onClick={e => errorDialog.current.close()}>Close</button>\n            </dialog>\n            <header>\n                <h1 className=\"mt-5 text-center\">Rare</h1>\n            </header>\n            <div className=\"mt-5\">\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                    <img className=\"mt-5\" src=\"https://via.placeholder.com/200x75\" />\n                </div>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center h-50\">\n                <form onSubmit={handleLogin}>\n                    <input ref={username} type=\"text\" id=\"username\" className=\"form-control mb-5\" placeholder=\"Username\" required autoFocus />\n                    <input ref={password} type=\"password\" id=\"password\" className=\"form-control mb-5\" placeholder=\"Password\" required />\n                    <div className=\"d-flex justify-content-center\">\n                        <button className=\"btn btn-outline-primary w-100\" type=\"submit\">Login</button>\n                    </div>\n                </form>\n                <div className=\"mt-3\">\n                    <small className=\"underline text-primary\">\n                        <Link to=\"/register\">\n                            Don't have an account yet? Click here to sign up!\n                        </Link>\n                    </small>\n                </div>\n            </div>\n        </main >\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostDetail.js",["131","132"],"import React, { useContext, useEffect, useState, useRef } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { PostContext } from \"./PostProvider\"\nimport \"./Posts.css\"\n\nexport const PostDetails = (props) => {\n    const { getPostById, releasePost } = useContext(PostContext)\n    const history = useHistory();\n    const deletePostModal = useRef();\n\n    const [post, setPost] = useState({})\n\n    useEffect(() => {\n        const postId = parseInt(props.match.params.postId)\n        getPostById(postId)\n            .then(setPost)\n    }, [])\n\n    return (\n        <section className=\"post d-flex flex-row\">\n            <dialog className=\"dialog dialog--deletePost\" ref={deletePostModal}>\n                <h4>Are you sure you want to delete this post?</h4>\n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                    <button className=\"deletePost btn btn-outline-primary\" onClick={() => {\n                        releasePost(post.id)\n                            .then(history.push(\"/posts\"))\n                    }}>Ok</button>\n                    <button className=\"btn btn-outline-primary\" onClick={e => deletePostModal.current.close()}>Cancel</button>\n                </div>\n            </dialog>\n            <div className=\"post_details d-flex flex-column container mr-0\">\n                <h3 className=\"post__title text-center\">{post.title}</h3>\n                <div className=\"d-flex flex-row justify-content-between\">\n                    <div className=\"post__manage__buttons\">\n                        <i className=\"fas fa-trash-alt post__hover__delete\" onClick={() => {\n                            deletePostModal.current.showModal()\n                        }}></i>\n                        <i className=\"fas fa-cog post__hover\" onClick={() => history.push(`/posts/edit/${post.id}`)}></i>\n                    </div>\n                    <div>\n                        <small>{post.category && post.category.label}</small>\n                    </div>\n                </div>\n                <div className=\"text-center\">\n                    <img className=\"mb-5 img-fluid w-100\" src=\"https://via.placeholder.com/400x100\" />\n                </div>\n                <div className=\"d-flex flex-row justify-content-between align-items-center\">\n                    <div>\n                        <small >Published on {post.publication_date} </small>\n                        <small className=\"d-block\"> By {post.rareuser && post.rareuser.user.first_name} {post.rareuser && post.rareuser.user.last_name}</small>\n                    </div>\n                    <div>\n                        <button className=\"btn btn-outline-primary\" onClick={() => history.push(`/post/${post.id}/comments`)}>View Comments</button>\n                    </div>\n                    <div className=\"d-flex align-items-center border border-primary rounded px-3 h-100\">\n                        Reactions go here\n                    </div>\n                </div>\n                <div className=\"post__content\">\n                    {post.content}\n                </div>\n            </div>\n            <div className=\"mr-auto\">\n                {post.tags && post.tags.map(tag => (\n                    <div key={tag.id} className=\"d-flex align-items-center border border-primary rounded px-5 mb-3\">{tag.label}</div>\n                ))}\n            </div>\n        </section>\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostSearch.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostForm.js",["133","134","135","136"],"import React, { useContext, useState, useEffect, Fragment } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { PostContext } from \"./PostProvider\"\nimport { CategoryContext } from \"../categories/CategoryProvider\"\nimport { TagContext } from \"../tags/TagProvider\"\nimport { findByTestId } from \"@testing-library/react\"\n\n\nexport const PostForm = (props) => {\n    // Use the required context providers for data\n    const { addPost, posts, updatePost, getPosts } = useContext(PostContext)\n    // const { profile, getProfile } = useContext(ProfileContext)\n\n    // Tags data\n    const { tags, getTags } = useContext(TagContext)\n\n    // Categories data\n    const { categories, getCategories } = useContext(CategoryContext)\n\n    // Component state\n    const [post, setPost] = useState({})\n    const [newTags, setNewTags] = useState([])\n\n    // History\n    const history = useHistory();\n\n    // Is there a a URL parameter??\n    const editMode = props.match.params.hasOwnProperty(\"postId\")  // true or false\n\n    const handleControlledInputChange = (event) => {\n        /*\n            When changing a state object or array, always create a new one\n            and change state instead of modifying current one\n        */\n        const newPost = Object.assign({}, post)          // Create copy\n        newPost[event.target.name] = event.target.value    // Modify copy\n        setPost(newPost)                                 // Set copy as new state\n    }\n\n    const handleTagUpdate = e => {\n        const updatedTagArray = []\n        newTags.forEach(loopTag => {\n            const newTag = {\n                id: loopTag.id,\n                label: loopTag.label,\n                isChecked: parseInt(e.target.value) === loopTag.id ?\n                    e.target.checked\n                        ? true : false\n                    : loopTag.isChecked ? true : false\n            }\n            updatedTagArray.push(newTag)\n        })\n        setNewTags(updatedTagArray)\n    }\n\n    /*\n        If there is a URL parameter, then the user has chosen to\n        edit an post.\n            1. Get the value of the URL parameter.\n            2. Use that `id` to find the post.\n            3. Update component state variable.\n    */\n    const getPostInEditMode = () => {\n        if (editMode) {\n            const postId = parseInt(props.match.params.postId)\n            const selectedPost = posts.find(a => a.id === postId) || {}\n            selectedPost.category\n                ? selectedPost.category_id = selectedPost.category.id\n                : selectedPost.category_id = 0\n            setPost(selectedPost)\n        }\n    }\n\n    const createNewTags = () => {\n        const tempTags = []\n        tags && tags.map(tag => tempTags.push({ id: tag.id, label: tag.label, isChecked: post.tags && post.tags.find(t => t.id === tag.id) ? true : false }))\n        setNewTags(tempTags)\n    }\n\n    // Get data from API when component initilizes\n    useEffect(() => {\n        getPosts();\n        getTags();\n        getCategories();\n    }, [])\n\n    // Once provider state is updated, determine the post (if edit)\n    useEffect(() => {\n        getPostInEditMode()\n    }, [posts])\n\n    useEffect(() => {\n        createNewTags()\n    }, [post, tags])\n\n\n    const constructNewPost = () => {\n        const postTagsArray = newTags.filter(pt => pt.isChecked === true).map(nt => nt.id)\n\n        if (editMode) {\n            // PUT\n            updatePost({\n                id: post.id,\n                title: post.title,\n                content: post.content,\n                category_id: parseInt(post.category_id),\n                publication_date: post.publication_date,\n                author_id: post.rareuser.id,\n                image_url: post.image_url,\n                tags: postTagsArray\n            })\n                .then(() => props.history.push(`/posts/${post.id}`))\n        } else {\n            // POST\n            addPost({\n                title: post.title,\n                content: post.content,\n                category_id: post.category_id,\n                image_url: post.image_url,\n                tags: postTagsArray\n            })\n                .then((newlyCreatedPost) => props.history.push(`/posts/${newlyCreatedPost.id}` ))\n        }\n\n    }\n\n    return (\n        <div className=\"container w-50\">\n            <form className=\"postForm\">\n                <h2 className=\"postForm__title\">{editMode ? \"Update Post\" : \"New Post\"}</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"title\" required autoFocus className=\"form-control w-75\"\n                            placeholder=\"Post title\"\n                            defaultValue={post.title}\n                            onChange={handleControlledInputChange}\n                        />\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"image_url\" className=\"form-control w-75\"\n                            placeholder=\"Image URL\"\n                            defaultValue={post.image_url}\n                            onChange={handleControlledInputChange}>\n                        </input>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <textarea rows=\"7\" type=\"text\" name=\"content\" required className=\"form-control\"\n                            placeholder=\"Article content\"\n                            value={post.content}\n                            onChange={handleControlledInputChange}>\n                        </textarea>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <select name=\"category_id\" className=\"form-control w-50\" value={post.category_id || ((post.category && post.category.id) || \"0\")} onChange={handleControlledInputChange}>\n                            <option value=\"0\" disabled>Category Select</option>\n                            {categories.map(category => (\n                                <option key={category.id} value={category.id}>{category.label}</option>\n                            ))}\n                        </select>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"d-flex flex-row flex-wrap form-check form-check-inline mb-3\">\n                        {\n                            newTags.map(tag => (\n                                <Fragment key={tag.id}>\n                                    <input type=\"checkbox\" name=\"tags\" className=\"form-check-input\" value={tag.id} checked={tag.isChecked} onChange={handleTagUpdate} />\n                                    <label htmlFor=\"tagsToAdd\" className=\"form-check-label\">{tag.label}</label>\n                                </Fragment>\n                            ))\n                        }\n                    </div>\n                </fieldset>\n\n                <button type=\"submit\"\n                    onClick={evt => {\n                        evt.preventDefault()\n                        constructNewPost()\n                    }}\n                    className=\"btn btn-primary\">\n                    {editMode ? \"Save\" : \"Publish\"}\n                </button>\n                <button type=\"button\" onClick={() => history.goBack()}\n                    className=\"btn btn-secondary ml-5\">Cancel</button>\n            </form>\n        </div>\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostList.js",["137","138","139"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagList.js",["140"],"import React, { useContext, useState, useEffect, useRef } from \"react\"\nimport { TagContext } from \"./TagProvider\"\nimport Tag from \"./tag\"\n\nexport const TagList = (props) => {\n  const editTagDialog = useRef()\n  const deleteTagDialog = useRef()\n  const { tags, getTags, createTag, updateTag, deleteTag } = useContext(TagContext)\n  const [newTag, setNewTag] = useState(\"\")\n  const [editedTag, setEditTag] = useState(\"\")\n  const [isEditing, setIsEditing] = useState(false)\n  const [editTagId, setEditTagId] = useState(0)\n  const [deletedTagId, setDeletedTagId] = useState(0) \n\n  const handleInput = (e) => {\n      if (isEditing) {\n        updateTag({ id: editTagId, label: editedTag })\n        .then(editTagDialog.current.close())\n        .then(setEditTag(\"\"))\n        .then(setIsEditing(false))\n      } else {\n        createTag({ label: newTag })\n        .then(setNewTag(\"\"))\n      }\n  }\n\n  const editATag = (e) => {\n    setEditTag(e.target.dataset.tagname)\n    setEditTagId(e.target.id)\n    setIsEditing(true)\n    editTagDialog.current.showModal()\n  }\n\n  const deleteATag = (e) => {\n    deleteTag(deletedTagId)\n    .then(deleteTagDialog.current.close())\n    .then(setDeletedTagId(0))\n  }\n\n  useEffect(() => {\n    getTags()\n  }, [])\n\n  return (\n      <div className=\"d-flex flex-row justify-content-around\">\n        <dialog className=\"dialog dialog--editTag\" ref={editTagDialog}>\n              <div className=\"d-flex flex-column justify-content-around align-items-center\">\n                <h4>Edit this tag</h4>\n                <input className=\"editTagInput form-control mb-5\" type=\"text\" placeholder=\"Add text\" value={editedTag} onChange={e => {\n                  setEditTag(e.target.value)\n                }}></input>\n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                  <button className=\"createTag btn btn-outline-primary\" onClick={handleInput}>Ok</button>\n                  <button className=\"btn btn-outline-primary\" onClick={e => editTagDialog.current.close()}>Close</button>\n                </div>\n              </div>\n            </dialog>\n            <dialog className=\"dialog dialog--deleteTag text-center\" ref={deleteTagDialog}>\n                <h4>Are you sure you want to delete this tag?</h4>\n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                  <button className=\"deleteTag btn btn-outline-primary\" onClick={deleteATag}>Ok</button>\n                  <button className=\"btn btn-outline-primary\" onClick={e => deleteTagDialog.current.close()}>Close</button>\n                </div>\n            </dialog>\n        <div className=\"allTags\">\n          {\n            tags.map(tag => <Tag key={tag.id} tag={tag} deleteTagDialog={deleteTagDialog} setDeletedTagId={setDeletedTagId} editATag={editATag} />)\n          }\n        </div>\n        <div> \n          <div className=\"addTagForm d-flex flex-column justify-content-around align-items-center\">\n            <h2>Create a new tag</h2>\n            <input className=\"tagInput\" type=\"text\" placeholder=\"Add text\" value={newTag} onChange={e => {\n              setNewTag(e.target.value)\n            }}></input>\n            <button className=\"createTag\" onClick={handleInput}>Create</button>\n          </div>\n        </div>\n      </div>\n  )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagProvider.js",["141"],"import React, { useState } from \"react\"\n\nexport const TagContext = React.createContext()\n\nexport const TagProvider = (props) => {\n  const [tags, setTags] = useState([])\n  const [postTags, setPostTags] = useState([])\n\n  const getTags = () => {\n    return fetch(\"http://localhost:8000/tags\", {\n      headers: {\n          \"Authorization\": `Token ${localStorage.getItem(\"rare_user_id\")}`\n      }\n  })\n      .then(res => res.json())\n      .then(setTags)\n  }\n\n  const createTag = tag => {\n    return fetch(\"http://localhost:8000/tags\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"rare_user_id\")}`\n      },\n      body: JSON.stringify(tag)\n    })\n      .then(getTags)\n  }\n\n  const createPostTag = posttag => {\n    return fetch(\"http://localhost:8000/posttags\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(posttag)\n    })\n      .then()\n  }\n\n  const updateTag = tag => {\n    return fetch(`http://localhost:8000/tags/${tag.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"rare_user_id\")}`\n      },\n      body: JSON.stringify(tag)\n    })\n      .then(getTags)\n  }\n\n  const deleteTag = id => {\n    return fetch(`http://localhost:8000/tags/${id}`, {\n      method: \"DELETE\",\n      headers: {\n      \"Authorization\": `Token ${localStorage.getItem(\"rare_user_id\")}`\n      }\n    })\n      .then(getTags)\n  }\n\n  const deletePostTag = (id, postId) => {\n    return fetch(`http://localhost:8000/posttags/${id}`, {\n      method: \"DELETE\",\n    })\n      .then()\n  }\n\n  return (\n    <TagContext.Provider value={{\n      tags, postTags, getTags, createTag, deleteTag, updateTag, deletePostTag, createPostTag\n    }}>\n      {props.children}\n    </TagContext.Provider>\n  )\n\n\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryList.js",["142"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/Category.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/PostTagList.js",["143"],"import React, { useContext, useEffect } from \"react\"\nimport { TagContext } from \"./TagProvider\"\nimport PostTag from \"./PostTag\"\nimport ListTags from \"./ListTags\"\n\nexport const PostTagList = (props) => {\n  const { tags, getTags, postTags, getTagsByPostId, deletePostTag, createPostTag } = useContext(TagContext)\n\n  const deleteAPostTag = (e) => {\n    e.preventDefault()\n    deletePostTag(e.target.id, e.target.dataset.postid)\n  }\n\n  const addAPostTag = (e) => {\n    e.preventDefault()\n    const newPostTag = {\n      \"tag_id\": e.target.value,\n      \"post_id\": props.postId\n    }\n    if (e.target.value !== \"ignore\") {\n      createPostTag(newPostTag)\n    }\n  }\n\n  useEffect(() => {\n    getTags()\n    getTagsByPostId(props.postId)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <select onChange={addAPostTag}>\n        <option value=\"ignore\">Add a tag to post</option>\n        {\n          tags.map(tag => <ListTags key={tag.id} tag={tag} addAPostTag={addAPostTag} />)\n        }\n      </select>\n      <div className=\"postTags\">\n        {\n          postTags.map(postTag => <PostTag key={postTag.id} postTag={postTag} deleteAPostTag={deleteAPostTag} />)\n        }\n      </div>\n    </React.Fragment>\n  )\n}\n",["144","145"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/tag.js",["146"],"import React from \"react\"\nimport \"./tag.css\"\n\nexport default (props) => (\n  <div className=\"tags\">\n    <div className=\"tagicon\"><i className=\"fas fa-cog\" id={props.tag.id} data-tagname={props.tag.label} onClick={props.editATag} ></i></div>\n    <div className=\"tagicon\"><i className=\"far fa-trash-alt\" id={props.tag.id} onClick={e => {\n        props.setDeletedTagId(props.tag.id)\n        props.deleteTagDialog.current.showModal() \n      }\n    }></i></div>\n    <div className=\"tagname\">{props.tag.label}</div>\n  </div>\n)\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/Post.js",["147","148"],"import React from \"react\"\nimport \"./Posts.css\"\nimport { Link } from \"react-router-dom\"\n\nexport default ({ post }) => (\n    <section className=\"post p-5 mb-5 border\">\n        <div className=\"d-flex flex-row justify-content-between\">\n            <h3 className=\"post__title\">\n                <Link to={`/posts/${post.id}`}>\n                    {post.title}\n                </Link>\n            </h3>\n            <small>Publication Date: {post.publication_date}</small>\n        </div>\n        <div className=\"d-flex flex-row justify-content-center\">\n            <img className=\"mb-5 img-fluid\" src=\"https://via.placeholder.com/400x200\" />\n        </div>\n        <div className=\"d-flex flex-row justify-content-between align-items-center\">\n            <div className=\"\">Author: {post.rareuser && post.rareuser.user.first_name} {post.rareuser && post.rareuser.user.last_name}</div>\n            <div className=\"border rounded-pill p-2\"><small># Reaction Count</small></div>\n        </div>\n    </section>\n)","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/AuthProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/PostTag.js",["149"],"import React from \"react\"\nimport \"./tag.css\"\n\nexport default (props) => (\n  <div className=\"tags\">\n    <div className=\"tagname\">{props.postTag.name}</div>\n    <div className=\"tagicon\"><i className=\"far fa-trash-alt\" id={props.postTag.id} data-postid={props.postTag.postId} onClick={props.deleteAPostTag}></i></div>\n  </div>\n)\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/ListTags.js",["150"],"import React from \"react\"\n\nexport default (props) => (\n  <option value={props.tag.id}>{props.tag.name}</option>\n)\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostTable.js",["151","152","153","154"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/CommentProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/PostComments.js",["155"],"import React, { useState, useContext, useEffect, useRef } from \"react\"\nimport { CommentContext } from \"./CommentProvider\"\nimport { Comment } from \"./Comment\"\nimport \"./PostComments.css\"\n\n\nexport const PostComments = (props) => {\n\n    const editCommentDialog = useRef()\n    const deleteCommentDialog = useRef()\n\n    \n    const { addComment, releaseComment, updateComment, getCommentsByPostId } = useContext(CommentContext)\n    \n    \n    const [editedSubject, setEditSubject] = useState(\"\")    \n    const [editedContent, setEditContent] = useState(\"\")    \n    const [editCommentId, setEditCommentId] = useState(0)\n    const [deletedCommentId, setDeletedCommentId] = useState(0)\n    \n\n    const [filteredComments, setFilteredComments] = useState([])\n    const postId = parseInt(props.match.params.postId)\n\n    useEffect(() => {        \n        getCommentsByPostId(postId)\n            .then(comments => comments.sort((a, b) => (a.created_on > b.created_on) ? -1 : 1))\n            .then(comments => comments.filter((comment) => (Date.parse(comment.created_on) < Date.now())))       \n            .then(setFilteredComments)           \n    }, [])\n\n  \n    // Component state\n    const [comment, setComment] = useState({})\n    \n\n    const handleControlledInputChange = (event) => {\n        /*\n            When changing a state object or array, always create a new one\n            and change state instead of modifying current one\n        */\n        const newComment = Object.assign({}, comment)          // Create copy\n        newComment[event.target.name] = event.target.value    // Modify copy\n        setComment(newComment)                                 // Set copy as new state\n    } \n\n\n    const handleInput = () => { \n        \n            // POST\n            console.log(\"adding a comment\")\n            addComment({\n                post_id: postId,\n                subject: comment.subject,\n                content: comment.content,                \n            })\n            .then(() => props.history.push(`/posts/${postId}`))\n    }\n\n    const handleEditInput =() => {\n        updateComment({\n            id: editCommentId,\n            subject: editedSubject,\n            content: editedContent\n        })\n        .then(() => props.history.push(`/posts/${postId}`)) \n    }\n\n  \n    const editAComment = (e) => {\n      console.log(e.target)\n      setEditSubject(e.target.dataset.commentsubject)\n      setEditContent(e.target.dataset.commentcontent)\n      setEditCommentId(e.target.id)\n      editCommentDialog.current.showModal()\n    }\n  \n    const deleteAComment = (e) => {\n      releaseComment(deletedCommentId)\n      .then(deleteCommentDialog.current.close())\n      .then(setDeletedCommentId(0))\n      .then(() => props.history.push(`/posts/${postId}`))\n    }   \n\n    return (\n        <div className=\"container\">\n\n            <div className=\"\">\n                    <div className=\"row justify-content-center\"> \n                        <div className=\"addCommentForm d-flex flex-column justify-content-around align-items-center\">\n                            <h2>Post Title's Comments</h2>\n                            <input className=\"commentInput\" name=\"subject\" type=\"text\" placeholder=\"Add subject\" defaultValue={comment.subject} onChange={handleControlledInputChange}></input>\n                            <textarea className=\"commentInput\" name=\"content\" type=\"text\" placeholder=\"Add content\" value={comment.content} onChange={handleControlledInputChange}></textarea>\n                            <button className=\"btn btn-outline-primary mt-3\" onClick={handleInput}>Create</button>\n                            <button className=\"btn btn-outline-primary mt-3\" onClick={() => props.history.push(`/posts/${postId}`)}>Back to post</button>\n                            \n                            \n                        </div>\n                    </div>\n                    <dialog className=\"dialog dialog--editComment\" ref={editCommentDialog}>\n                        <div className=\"d-flex flex-column justify-content-around align-items-center\">\n                            <h4>Edit this comment</h4>\n                            <input className=\"form-control mb-5\" type=\"text\" placeholder=\"Add subject\" value={editedSubject} onChange={e => {\n                            setEditSubject(e.target.value)\n                            }}></input>\n                            <input className=\"form-control mb-5\" type=\"text\" placeholder=\"Add content\" value={editedContent} onChange={e => {\n                            setEditContent(e.target.value)\n                            }}></input>\n                            <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                            <button className=\"createComment btn btn-outline-primary\" onClick={handleEditInput}>Ok</button>\n                            <button className=\"btn btn-outline-primary\" onClick={e => editCommentDialog.current.close()}>Close</button>\n                            </div>\n                        </div>\n                    </dialog>\n                    <dialog className=\"dialog dialog--deleteComment text-center\" ref={deleteCommentDialog}>\n                        <h4>Are you sure you want to delete this comment?</h4>\n                        <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                        <button className=\"deleteComment btn btn-outline-primary\" onClick={deleteAComment}>Ok</button>\n                        <button className=\"btn btn-outline-primary\" onClick={e => deleteCommentDialog.current.close()}>Close</button>\n                        </div>\n                    </dialog>\n                    <div className=\"container\">\n                        <div className=\"row justify-content-around\">\n                        {\n                           filteredComments.map(comment => <Comment key={comment.id} comment={comment} deleteCommentDialog={deleteCommentDialog} setComment={setComment} setDeletedCommentId={setDeletedCommentId} editAComment={editAComment} />)\n                        }\n                        </div>\n                    </div>\n                    \n            </div>           \n            \n        </div>\n    )\n}","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/Comment.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryPost.js",["156","157"],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":40,"nodeType":"164","messageId":"165","endLine":1,"endColumn":48},{"ruleId":"166","severity":1,"message":"167","line":14,"column":8,"nodeType":"168","endLine":14,"endColumn":10,"suggestions":"169"},{"ruleId":"162","severity":1,"message":"170","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":61,"column":25,"nodeType":"173","endLine":61,"endColumn":101},{"ruleId":"171","severity":1,"message":"172","line":54,"column":21,"nodeType":"173","endLine":54,"endColumn":86},{"ruleId":"166","severity":1,"message":"174","line":17,"column":8,"nodeType":"168","endLine":17,"endColumn":10,"suggestions":"175"},{"ruleId":"171","severity":1,"message":"172","line":45,"column":21,"nodeType":"173","endLine":45,"endColumn":103},{"ruleId":"162","severity":1,"message":"176","line":6,"column":10,"nodeType":"164","messageId":"165","endLine":6,"endColumn":22},{"ruleId":"166","severity":1,"message":"177","line":85,"column":8,"nodeType":"168","endLine":85,"endColumn":10,"suggestions":"178"},{"ruleId":"166","severity":1,"message":"179","line":90,"column":8,"nodeType":"168","endLine":90,"endColumn":15,"suggestions":"180"},{"ruleId":"166","severity":1,"message":"181","line":94,"column":8,"nodeType":"168","endLine":94,"endColumn":20,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":15,"column":55,"nodeType":"185","messageId":"186","endLine":15,"endColumn":57},{"ruleId":"166","severity":1,"message":"187","line":22,"column":8,"nodeType":"168","endLine":22,"endColumn":10,"suggestions":"188"},{"ruleId":"166","severity":1,"message":"189","line":29,"column":8,"nodeType":"168","endLine":29,"endColumn":21,"suggestions":"190"},{"ruleId":"166","severity":1,"message":"191","line":42,"column":6,"nodeType":"168","endLine":42,"endColumn":8,"suggestions":"192"},{"ruleId":"162","severity":1,"message":"193","line":7,"column":20,"nodeType":"164","messageId":"165","endLine":7,"endColumn":31},{"ruleId":"166","severity":1,"message":"194","line":44,"column":6,"nodeType":"168","endLine":44,"endColumn":8,"suggestions":"195"},{"ruleId":"166","severity":1,"message":"196","line":28,"column":6,"nodeType":"168","endLine":28,"endColumn":8,"suggestions":"197"},{"ruleId":"158","replacedBy":"198"},{"ruleId":"160","replacedBy":"199"},{"ruleId":"200","severity":1,"message":"201","line":4,"column":1,"nodeType":"202","endLine":14,"endColumn":2},{"ruleId":"200","severity":1,"message":"201","line":5,"column":1,"nodeType":"202","endLine":23,"endColumn":2},{"ruleId":"171","severity":1,"message":"172","line":16,"column":13,"nodeType":"173","endLine":16,"endColumn":89},{"ruleId":"200","severity":1,"message":"201","line":4,"column":1,"nodeType":"202","endLine":9,"endColumn":2},{"ruleId":"200","severity":1,"message":"201","line":3,"column":1,"nodeType":"202","endLine":5,"endColumn":2},{"ruleId":"162","severity":1,"message":"203","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":12},{"ruleId":"166","severity":1,"message":"204","line":35,"column":8,"nodeType":"168","endLine":35,"endColumn":10,"suggestions":"205"},{"ruleId":"166","severity":1,"message":"189","line":42,"column":8,"nodeType":"168","endLine":42,"endColumn":21,"suggestions":"206"},{"ruleId":"183","severity":1,"message":"184","line":88,"column":75,"nodeType":"185","messageId":"186","endLine":88,"endColumn":77},{"ruleId":"166","severity":1,"message":"207","line":30,"column":8,"nodeType":"168","endLine":30,"endColumn":10,"suggestions":"208"},{"ruleId":"166","severity":1,"message":"209","line":16,"column":8,"nodeType":"168","endLine":16,"endColumn":10,"suggestions":"210"},{"ruleId":"183","severity":1,"message":"184","line":22,"column":58,"nodeType":"185","messageId":"186","endLine":22,"endColumn":60},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserAdminStatus'. Either include it or remove the dependency array.","ArrayExpression",["213"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getPostById' and 'props.match.params.postId'. Either include them or remove the dependency array.",["214"],"'findByTestId' is defined but never used.","React Hook useEffect has missing dependencies: 'getCategories', 'getPosts', and 'getTags'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has a missing dependency: 'getPostInEditMode'. Either include it or remove the dependency array.",["216"],"React Hook useEffect has a missing dependency: 'createNewTags'. Either include it or remove the dependency array.",["217"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getPosts', 'getPostsByUserId', and 'props.location'. Either include them or remove the dependency array.",["218"],"React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.",["219"],"React Hook useEffect has a missing dependency: 'getTags'. Either include it or remove the dependency array.",["220"],"'setPostTags' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'getTags', 'getTagsByPostId', and 'props.postId'. Either include them or remove the dependency array.",["222"],["211"],["212"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Post' is defined but never used.","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["223"],["224"],"React Hook useEffect has missing dependencies: 'getCommentsByPostId' and 'postId'. Either include them or remove the dependency array.",["225"],"React Hook useEffect has missing dependencies: 'getPostByCategoryId' and 'props.match.params.categoryId'. Either include them or remove the dependency array.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"239","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [getUserAdminStatus]",{"range":"254","text":"255"},"Update the dependencies array to be: [getPostById, props.match.params.postId]",{"range":"256","text":"257"},"Update the dependencies array to be: [getCategories, getPosts, getTags]",{"range":"258","text":"259"},"Update the dependencies array to be: [getPostInEditMode, posts]",{"range":"260","text":"261"},"Update the dependencies array to be: [createNewTags, post, tags]",{"range":"262","text":"263"},"Update the dependencies array to be: [getPosts, getPostsByUserId, props.location]",{"range":"264","text":"265"},"Update the dependencies array to be: [posts, searchTerms]",{"range":"266","text":"267"},"Update the dependencies array to be: [getTags]",{"range":"268","text":"269"},"Update the dependencies array to be: [getCategories]",{"range":"270","text":"271"},"Update the dependencies array to be: [getTags, getTagsByPostId, props.postId]",{"range":"272","text":"273"},"Update the dependencies array to be: [getPosts]",{"range":"274","text":"275"},{"range":"276","text":"267"},"Update the dependencies array to be: [getCommentsByPostId, postId]",{"range":"277","text":"278"},"Update the dependencies array to be: [getPostByCategoryId, props.match.params.categoryId]",{"range":"279","text":"280"},[413,415],"[getUserAdminStatus]",[547,549],"[getPostById, props.match.params.postId]",[3021,3023],"[getCategories, getPosts, getTags]",[3151,3158],"[getPostInEditMode, posts]",[3214,3226],"[createNewTags, post, tags]",[719,721],"[getPosts, getPostsByUserId, props.location]",[1115,1128],"[posts, searchTerms]",[1226,1228],"[getTags]",[1458,1460],"[getCategories]",[732,734],"[getTags, getTagsByPostId, props.postId]",[1248,1250],"[getPosts]",[1644,1657],[1135,1137],"[getCommentsByPostId, postId]",[503,505],"[getPostByCategoryId, props.match.params.categoryId]"]