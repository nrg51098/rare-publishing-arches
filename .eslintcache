[{"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/index.js":"1","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/Rare.js":"2","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/ApplicationViews.js":"3","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/nav/NavBar.js":"4","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Register.js":"5","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Login.js":"6","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostDetail.js":"7","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostSearch.js":"8","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostForm.js":"9","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostList.js":"10","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagList.js":"11","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagProvider.js":"12","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryProvider.js":"13","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostProvider.js":"14","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryList.js":"15","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/Category.js":"16","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/PostTagList.js":"17","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/tag.js":"18","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/Post.js":"19","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/AuthProvider.js":"20","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/PostTag.js":"21","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/ListTags.js":"22","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostTable.js":"23"},{"size":387,"mtime":1608076932786,"results":"24","hashOfConfig":"25"},{"size":1073,"mtime":1608078068942,"results":"26","hashOfConfig":"25"},{"size":2799,"mtime":1608095639029,"results":"27","hashOfConfig":"25"},{"size":3166,"mtime":1608250168759,"results":"28","hashOfConfig":"25"},{"size":4107,"mtime":1607793007525,"results":"29","hashOfConfig":"25"},{"size":3089,"mtime":1607793007524,"results":"30","hashOfConfig":"25"},{"size":2412,"mtime":1608095639032,"results":"31","hashOfConfig":"25"},{"size":540,"mtime":1607793007528,"results":"32","hashOfConfig":"25"},{"size":6439,"mtime":1608095639033,"results":"33","hashOfConfig":"25"},{"size":1643,"mtime":1608078068952,"results":"34","hashOfConfig":"25"},{"size":3317,"mtime":1608095639036,"results":"35","hashOfConfig":"25"},{"size":1913,"mtime":1608095639037,"results":"36","hashOfConfig":"25"},{"size":1585,"mtime":1608076932755,"results":"37","hashOfConfig":"25"},{"size":3067,"mtime":1608078068954,"results":"38","hashOfConfig":"25"},{"size":3554,"mtime":1608252975820,"results":"39","hashOfConfig":"25"},{"size":812,"mtime":1608252922054,"results":"40","hashOfConfig":"25"},{"size":1198,"mtime":1607793007529,"results":"41","hashOfConfig":"25"},{"size":519,"mtime":1608095639039,"results":"42","hashOfConfig":"25"},{"size":997,"mtime":1608078068945,"results":"43","hashOfConfig":"25"},{"size":662,"mtime":1607793007524,"results":"44","hashOfConfig":"25"},{"size":326,"mtime":1607793007529,"results":"45","hashOfConfig":"25"},{"size":114,"mtime":1607793007529,"results":"46","hashOfConfig":"25"},{"size":2550,"mtime":1608078068956,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"k1i1yd",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"50"},"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/index.js",[],["110","111"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/Rare.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/ApplicationViews.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/nav/NavBar.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Register.js",["112","113"],"import React, { useRef } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const username = useRef()\n    const password = useRef()\n    const verifyPassword = useRef()\n    const passwordDialog = useRef()\n    const bio = useRef()\n    const profileUrl = useRef()\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (password.current.value === verifyPassword.current.value) {\n            const newUser = {\n                \"first_name\": firstName.current.value,\n                \"last_name\": lastName.current.value,\n                \"email\": email.current.value,\n                \"username\": username.current.value,\n                \"bio\": bio.current.value,\n                \"profile_image_url\": profileUrl.current.value,\n                \"password\": password.current.value,\n            }\n\n            return fetch(\"http://127.0.0.1:8000/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify(newUser)\n            })\n                .then(res => res.json())\n                .then(res => {\n                    if (\"token\" in res) {\n                        localStorage.setItem(\"rare_user_id\", res.token)\n                        props.history.push(\"/\")\n                    }\n                })\n        } else {\n            passwordDialog.current.showModal()\n        }\n    }\n\n    return (\n        <main className=\"container-md vh-100\">\n            <dialog className=\"dialog dialog--password\" ref={passwordDialog}>\n                <div>Passwords do not match</div>\n                    <button className=\"button--close\" onClick={e => passwordDialog.current.close()}>Close</button>\n            </dialog>\n            <header className=\"mt-5 text-center\">\n                <h1>Rare</h1>\n            </header>\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <div className=\"d-flex flex-row justify-content-center align-items-center mt-5\">\n                    <div className=\"d-flex flex-column w-100 text-center mr-5\">\n                        <img className=\"mb-5 img-fluid\" src=\"https://via.placeholder.com/300x200\" />\n                        <input ref={firstName} name=\"firstName\" type=\"text\" id=\"register--first-name\" className=\"form-control mb-5\" placeholder=\"First Name\" required autoFocus />\n                        <input ref={lastName} name=\"lastname\" type=\"text\" id=\"register--last-name\" className=\"form-control mb-5\" placeholder=\"Last Name\" required />\n                        <input ref={email} name=\"email\" type=\"email\" id=\"register--email\" className=\"form-control mb-5\" placeholder=\"Email\" required />\n                    </div>\n                    <div className=\"d-flex flex-column w-100 text-center\">\n                        <input ref={username} name=\"username\" type=\"text\" id=\"register--username\" className=\"form-control mb-5\" placeholder=\"Username\" required />\n                        <input ref={password} name=\"password\" type=\"password\" id=\"register--password\" className=\"form-control mb-5\" placeholder=\"Password\" required />\n                        <input ref={verifyPassword} name=\"verifyPassword\" type=\"password\" id=\"register--verify-password\" className=\"form-control mb-5\" placeholder=\"Verify Password\" required />\n                        <input ref={profileUrl} name=\"profileUrl\" type=\"text\" id=\"register--profile-pic\" className=\"form-control mb-5\" placeholder=\"Profile Pic URL\" required />\n                        <textarea ref={bio} name=\"bio\" type=\"text\" id=\"register--bio\" className=\"form-control mb-5\" placeholder=\"Bio\" rows=\"4\" required />\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <button className=\"btn btn-outline-primary w-50\" type=\"submit\">Register</button>\n                </div>\n            </form>\n        </main>\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Login.js",["114"],"import React, { useRef } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport \"./Auth.css\"\n\nexport const Login = () => {\n    const username = useRef()\n    const password = useRef()\n    const invalidDialog = useRef()\n    const errorDialog = useRef()\n    const history = useHistory()\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        return fetch('http://127.0.0.1:8000/login', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: username.current.value,\n                password: password.current.value\n            })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (\"valid\" in res && res.valid) {\n                    localStorage.setItem(\"rare_user_id\", res.token)\n                    history.push(\"/\")\n                }\n                else {\n                    invalidDialog.current.showModal()\n                }\n            })\n            .catch(err => errorDialog.current.showModal())\n    }\n\n    return (\n        <main className=\"container vh-100\">\n            <dialog className=\"dialog dialog--auth\" ref={invalidDialog}>\n                <div>Email or password was not valid.</div>\n                <button className=\"button--close\" onClick={e => invalidDialog.current.close()}>Close</button>\n            </dialog>\n            <dialog className=\"dialog dialog--auth\" ref={errorDialog}>\n                <div>Could not contact server.</div>\n                <button className=\"button--close\" onClick={e => errorDialog.current.close()}>Close</button>\n            </dialog>\n            <header>\n                <h1 className=\"mt-5 text-center\">Rare</h1>\n            </header>\n            <div className=\"mt-5\">\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                    <img className=\"mt-5\" src=\"https://via.placeholder.com/200x75\" />\n                </div>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center h-50\">\n                <form onSubmit={handleLogin}>\n                    <input ref={username} type=\"text\" id=\"username\" className=\"form-control mb-5\" placeholder=\"Username\" required autoFocus />\n                    <input ref={password} type=\"password\" id=\"password\" className=\"form-control mb-5\" placeholder=\"Password\" required />\n                    <div className=\"d-flex justify-content-center\">\n                        <button className=\"btn btn-outline-primary w-100\" type=\"submit\">Login</button>\n                    </div>\n                </form>\n                <div className=\"mt-3\">\n                    <small className=\"underline text-primary\">\n                        <Link to=\"/register\">\n                            Don't have an account yet? Click here to sign up!\n                        </Link>\n                    </small>\n                </div>\n            </div>\n        </main >\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostDetail.js",["115","116"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { PostContext } from \"./PostProvider\"\nimport \"./Posts.css\"\n\nexport const PostDetails = (props) => {\n    const { getPostById } = useContext(PostContext)\n    const history = useHistory();\n\n    const [post, setPost] = useState({})\n\n    useEffect(() => {\n        const postId = parseInt(props.match.params.postId)\n        getPostById(postId)\n            .then(setPost)\n    }, [])\n\n    return (\n        <section className=\"post d-flex flex-row\">\n            <div className=\"post_details d-flex flex-column container\">\n                <h3 className=\"post__title text-center\">{post.title}</h3>\n                <div className=\"d-flex flex-row justify-content-between\">\n                    <div className=\"post__manage__buttons\">\n                        <i className=\"fas fa-trash-alt\"></i>\n                        <i className=\"fas fa-cog post__hover\" onClick={() => history.push(`/posts/edit/${post.id}`)}></i>\n                    </div>\n                    <div>\n                        <small>{post.category && post.category.label}</small>\n                    </div>\n                </div>\n                <div className=\"text-center\">\n                    <img className=\"mb-5 img-fluid w-100\" src=\"https://via.placeholder.com/400x100\" />\n                </div>\n                <div className=\"d-flex flex-row justify-content-between align-items-center\">\n                    <div>\n                        <small>By {post.rareuser && post.rareuser.user.first_name} {post.rareuser && post.rareuser.user.last_name}</small>\n                    </div>\n                    <div>\n                        <button className=\"btn btn-outline-primary\">View Comments</button>\n                    </div>\n                    <div className=\"d-flex align-items-center border border-primary rounded px-3 h-100\">\n                        Reactions go here\n                    </div>\n                </div>\n                <div className=\"post__content\">\n                    {post.content}\n                </div>\n            </div>\n            <div className=\"mx-5\">\n                {post.tags && post.tags.map(tag => (\n                    <div key={tag.id} className=\"d-flex align-items-center border border-primary rounded px-5 mb-3\">{tag.label}</div>\n                ))}\n            </div>\n        </section>\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostSearch.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostForm.js",["117","118","119","120"],"import React, { useContext, useState, useEffect } from \"react\"\nimport { PostContext } from \"./PostProvider\"\nimport { CategoryContext } from \"../categories/CategoryProvider\"\nimport { TagContext } from \"../tags/TagProvider\"\n\n\nexport const PostForm = (props) => {\n    // Use the required context providers for data\n    const { addPost, posts, updatePost, getPosts } = useContext(PostContext)\n    // const { profile, getProfile } = useContext(ProfileContext)\n\n    // Tags data\n    const { tags, getTags } = useContext(TagContext)\n\n    // Categories data\n    const { categories, getCategories } = useContext(CategoryContext)\n\n    // Component state\n    const [post, setPost] = useState({})\n\n    // Is there a a URL parameter??\n    const editMode = props.match.params.hasOwnProperty(\"postId\")  // true or false\n\n    const handleControlledInputChange = (event) => {\n        /*\n            When changing a state object or array, always create a new one\n            and change state instead of modifying current one\n        */\n        const newPost = Object.assign({}, post)          // Create copy\n        newPost[event.target.name] = event.target.value    // Modify copy\n        setPost(newPost)                                 // Set copy as new state\n    }\n\n    /*\n        If there is a URL parameter, then the user has chosen to\n        edit an post.\n            1. Get the value of the URL parameter.\n            2. Use that `id` to find the post.\n            3. Update component state variable.\n    */\n    const getPostInEditMode = () => {\n        if (editMode) {\n            const postId = parseInt(props.match.params.postId)\n            const selectedPost = posts.find(a => a.id === postId) || {}\n            setPost(selectedPost)\n        }\n    }\n\n    // Get data from API when component initilizes\n    useEffect(() => {\n        getPosts();\n        getTags();\n        getCategories();\n    }, [])\n\n    // Once provider state is updated, determine the post (if edit)\n    useEffect(() => {\n        getPostInEditMode()\n    }, [posts])\n\n\n    const constructNewPost = () => {\n        const now = new Date();\n\n        if (editMode) {\n            // PUT\n            updatePost({\n                id: post.id,\n                title: post.title,\n                content: post.content,\n                category_id: parseInt(post.category_id),\n                publication_date: post.publication_date,\n                author_id: post.rareuser.id,\n                image_url: post.image_url\n            })\n                .then(() => props.history.push(\"/posts\"))\n        } else {\n            // POST\n            addPost({\n                title: post.title,\n                content: post.content,\n                category_id: post.category_id,\n                image_url: post.image_url\n            })\n                .then(() => props.history.push(\"/posts\"))\n        }\n\n    }\n\n    return (\n        <div className=\"container w-50\">\n            <form className=\"postForm\">\n                <h2 className=\"postForm__title\">{editMode ? \"Update Post\" : \"New Post\"}</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"title\" required autoFocus className=\"form-control w-75\"\n                            placeholder=\"Post title\"\n                            defaultValue={post.title}\n                            onChange={handleControlledInputChange}\n                        />\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"image_url\" className=\"form-control w-75\"\n                            placeholder=\"Image URL\"\n                            defaultValue={post.image_url}\n                            onChange={handleControlledInputChange}>\n                        </input>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <textarea rows=\"7\" type=\"text\" name=\"content\" required className=\"form-control\"\n                            placeholder=\"Article content\"\n                            value={post.content}\n                            onChange={handleControlledInputChange}>\n                        </textarea>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <select name=\"category_id\" className=\"form-control w-50\" value={post.category_id || ((post.category && post.category.id) || \"0\")} onChange={handleControlledInputChange}>\n                            <option value=\"0\" disabled>Category Select</option>\n                            {categories.map(category => (\n                                <option key={category.id} value={category.id}>{category.label}</option>\n                            ))}\n                        </select>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"d-flex flex-row flex-wrap form-check form-check-inline mb-3\">\n                        <input type=\"checkbox\" name=\"tag-1\" className=\"form-check-input\" />\n                        <label htmlFor=\"tag-1\" className=\"form-check-label\">Tag1</label>\n                        <input type=\"checkbox\" name=\"tag-2\" className=\"form-check-input\" />\n                        <label htmlFor=\"tag-2\" className=\"form-check-label\">Tag2</label>\n                        <input type=\"checkbox\" name=\"tag-3\" className=\"form-check-input\" />\n                        <label htmlFor=\"tag-3\" className=\"form-check-label\">Tag3</label>\n                        <input type=\"checkbox\" name=\"tag-4\" className=\"form-check-input\" />\n                        <label htmlFor=\"tag-4\" className=\"form-check-label\">Tag4</label>\n                        <input type=\"checkbox\" name=\"tag-5\" className=\"form-check-input\" />\n                        <label htmlFor=\"tag-5\" className=\"form-check-label\">Tag5</label>\n                    </div>\n                </fieldset>\n\n                <button type=\"submit\"\n                    onClick={evt => {\n                        evt.preventDefault()\n                        constructNewPost()\n                    }}\n                    className=\"btn btn-primary\">\n                    {editMode ? \"Save\" : \"Publish\"}\n                </button>\n            </form>\n        </div>\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostList.js",["121","122","123"],"import React, { useState, useContext, useEffect } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { PostContext } from \"./PostProvider\"\nimport Post from \"./Post\"\nimport \"./Posts.css\"\n\nexport const PostList = (props) => {\n    const { getPosts, posts, searchTerms, getPostsByUserId } = useContext(PostContext)\n    const history = useHistory();\n\n    const [filteredPosts, setFiltered] = useState([])\n\n    // Initialization effect hook -> Go get post data\n    useEffect(() => {\n        if (props.location && props.location.pathname == '/user/posts') {\n            // get posts by user id\n            getPostsByUserId()\n        } else {\n            // get all posts\n            getPosts()\n        }\n    }, [])\n\n    useEffect(() => {\n        const matchingPosts = posts.filter(post => post.title.toLowerCase().includes(searchTerms.toLowerCase()))\n        setFiltered(matchingPosts)\n    }, [searchTerms])\n\n\n    useEffect(() => {\n        setFiltered(posts)\n    }, [posts])\n\n    return (\n        <div>\n            <div className=\"d-flex flex-row justify-content-end\">\n                <button className=\"d-flex flex-row justify-content-center align-items-center post__add btn btn-primary mr-5\"\n                    onClick={() => history.push(\"/posts/create\")}\n                >\n                    Add Post\n                    <i className=\"fas fa-plus ml-4 mr-2\"></i>\n                </button>\n            </div>\n            <div className=\"posts post__list mt-5 mx-5 px-3\">\n                {\n                    filteredPosts.map(post => <Post key={post.id} post={post} />)\n                }\n            </div>\n        </div>\n    )\n}","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagList.js",["124"],"import React, { useContext, useState, useEffect, useRef } from \"react\"\nimport { TagContext } from \"./TagProvider\"\nimport Tag from \"./tag\"\n\nexport const TagList = (props) => {\n  const editTagDialog = useRef()\n  const deleteTagDialog = useRef()\n  const { tags, getTags, createTag, updateTag, deleteTag } = useContext(TagContext)\n  const [newTag, setNewTag] = useState(\"\")\n  const [editedTag, setEditTag] = useState(\"\")\n  const [isEditing, setIsEditing] = useState(false)\n  const [editTagId, setEditTagId] = useState(0)\n  const [deletedTagId, setDeletedTagId] = useState(0) \n\n  const handleInput = (e) => {\n      if (isEditing) {\n        updateTag({ id: editTagId, label: editedTag })\n        .then(editTagDialog.current.close())\n        .then(setEditTag(\"\"))\n        .then(setIsEditing(false))\n      } else {\n        createTag({ label: newTag })\n        .then(setNewTag(\"\"))\n      }\n  }\n\n  const editATag = (e) => {\n    setEditTag(e.target.dataset.tagname)\n    setEditTagId(e.target.id)\n    setIsEditing(true)\n    editTagDialog.current.showModal()\n  }\n\n  const deleteATag = (e) => {\n    deleteTag(deletedTagId)\n    .then(deleteTagDialog.current.close())\n    .then(setDeletedTagId(0))\n  }\n\n  useEffect(() => {\n    getTags()\n  }, [])\n\n  return (\n      <div className=\"d-flex flex-row justify-content-around\">\n        <dialog className=\"dialog dialog--editTag\" ref={editTagDialog}>\n              <div className=\"d-flex flex-column justify-content-around align-items-center\">\n                <h4>Edit this tag</h4>\n                <input className=\"editTagInput form-control mb-5\" type=\"text\" placeholder=\"Add text\" value={editedTag} onChange={e => {\n                  setEditTag(e.target.value)\n                }}></input>\n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                  <button className=\"createTag btn btn-outline-primary\" onClick={handleInput}>Ok</button>\n                  <button className=\"btn btn-outline-primary\" onClick={e => editTagDialog.current.close()}>Close</button>\n                </div>\n              </div>\n            </dialog>\n            <dialog className=\"dialog dialog--deleteTag text-center\" ref={deleteTagDialog}>\n                <h4>Are you sure you want to delete this tag?</h4>\n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                  <button className=\"deleteTag btn btn-outline-primary\" onClick={deleteATag}>Ok</button>\n                  <button className=\"btn btn-outline-primary\" onClick={e => deleteTagDialog.current.close()}>Close</button>\n                </div>\n            </dialog>\n        <div className=\"allTags\">\n          {\n            tags.map(tag => <Tag key={tag.id} tag={tag} deleteTagDialog={deleteTagDialog} setDeletedTagId={setDeletedTagId} editATag={editATag} />)\n          }\n        </div>\n        <div> \n          <div className=\"addTagForm d-flex flex-column justify-content-around align-items-center\">\n            <h2>Create a new tag</h2>\n            <input className=\"tagInput\" type=\"text\" placeholder=\"Add text\" value={newTag} onChange={e => {\n              setNewTag(e.target.value)\n            }}></input>\n            <button className=\"createTag\" onClick={handleInput}>Create</button>\n          </div>\n        </div>\n      </div>\n  )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagProvider.js",["125"],"import React, { useState } from \"react\"\n\nexport const TagContext = React.createContext()\n\nexport const TagProvider = (props) => {\n  const [tags, setTags] = useState([])\n  const [postTags, setPostTags] = useState([])\n\n  const getTags = () => {\n    return fetch(\"http://localhost:8000/tags\", {\n      headers: {\n          \"Authorization\": `Token ${localStorage.getItem(\"rare_user_id\")}`\n      }\n  })\n      .then(res => res.json())\n      .then(setTags)\n  }\n\n  const createTag = tag => {\n    return fetch(\"http://localhost:8000/tags\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"rare_user_id\")}`\n      },\n      body: JSON.stringify(tag)\n    })\n      .then(getTags)\n  }\n\n  const createPostTag = posttag => {\n    return fetch(\"http://localhost:8000/posttags\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(posttag)\n    })\n      .then()\n  }\n\n  const updateTag = tag => {\n    return fetch(`http://localhost:8000/tags/${tag.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"rare_user_id\")}`\n      },\n      body: JSON.stringify(tag)\n    })\n      .then(getTags)\n  }\n\n  const deleteTag = id => {\n    return fetch(`http://localhost:8000/tags/${id}`, {\n      method: \"DELETE\",\n      headers: {\n      \"Authorization\": `Token ${localStorage.getItem(\"rare_user_id\")}`\n      }\n    })\n      .then(getTags)\n  }\n\n  const deletePostTag = (id, postId) => {\n    return fetch(`http://localhost:8000/posttags/${id}`, {\n      method: \"DELETE\",\n    })\n      .then()\n  }\n\n  return (\n    <TagContext.Provider value={{\n      tags, postTags, getTags, createTag, deleteTag, updateTag, deletePostTag, createPostTag\n    }}>\n      {props.children}\n    </TagContext.Provider>\n  )\n\n\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryList.js",["126"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/Category.js",["127"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/PostTagList.js",["128"],"import React, { useContext, useEffect } from \"react\"\nimport { TagContext } from \"./TagProvider\"\nimport PostTag from \"./PostTag\"\nimport ListTags from \"./ListTags\"\n\nexport const PostTagList = (props) => {\n  const { tags, getTags, postTags, getTagsByPostId, deletePostTag, createPostTag } = useContext(TagContext)\n\n  const deleteAPostTag = (e) => {\n    e.preventDefault()\n    deletePostTag(e.target.id, e.target.dataset.postid)\n  }\n\n  const addAPostTag = (e) => {\n    e.preventDefault()\n    const newPostTag = {\n      \"tag_id\": e.target.value,\n      \"post_id\": props.postId\n    }\n    if (e.target.value !== \"ignore\") {\n      createPostTag(newPostTag)\n    }\n  }\n\n  useEffect(() => {\n    getTags()\n    getTagsByPostId(props.postId)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <select onChange={addAPostTag}>\n        <option value=\"ignore\">Add a tag to post</option>\n        {\n          tags.map(tag => <ListTags key={tag.id} tag={tag} addAPostTag={addAPostTag} />)\n        }\n      </select>\n      <div className=\"postTags\">\n        {\n          postTags.map(postTag => <PostTag key={postTag.id} postTag={postTag} deleteAPostTag={deleteAPostTag} />)\n        }\n      </div>\n    </React.Fragment>\n  )\n}\n",["129","130"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/tag.js",["131"],"import React from \"react\"\nimport \"./tag.css\"\n\nexport default (props) => (\n  <div className=\"tags\">\n    <div className=\"tagicon\"><i className=\"fas fa-cog\" id={props.tag.id} data-tagname={props.tag.label} onClick={props.editATag} ></i></div>\n    <div className=\"tagicon\"><i className=\"far fa-trash-alt\" id={props.tag.id} onClick={e => {\n        props.setDeletedTagId(props.tag.id)\n        props.deleteTagDialog.current.showModal() \n      }\n    }></i></div>\n    <div className=\"tagname\">{props.tag.label}</div>\n  </div>\n)\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/Post.js",["132","133"],"import React from \"react\"\nimport \"./Posts.css\"\nimport { Link } from \"react-router-dom\"\n\nexport default ({ post }) => (\n    <section className=\"post p-5 mb-5 border\">\n        <div className=\"d-flex flex-row justify-content-between\">\n            <h3 className=\"post__title\">\n                <Link to={`/posts/${post.id}`}>\n                    {post.title}\n                </Link>\n            </h3>\n            <small>Publication Date: {post.publication_date}</small>\n        </div>\n        <div className=\"d-flex flex-row justify-content-center\">\n            <img className=\"mb-5 img-fluid\" src=\"https://via.placeholder.com/400x200\" />\n        </div>\n        <div className=\"d-flex flex-row justify-content-between align-items-center\">\n            <div className=\"\">Author: {post.rareuser && post.rareuser.user.first_name} {post.rareuser && post.rareuser.user.last_name}</div>\n            <div className=\"border rounded-pill p-2\"><small># Reaction Count</small></div>\n        </div>\n    </section>\n)","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/AuthProvider.js",[],["134","135"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/PostTag.js",["136"],"import React from \"react\"\nimport \"./tag.css\"\n\nexport default (props) => (\n  <div className=\"tags\">\n    <div className=\"tagname\">{props.postTag.name}</div>\n    <div className=\"tagicon\"><i className=\"far fa-trash-alt\" id={props.postTag.id} data-postid={props.postTag.postId} onClick={props.deleteAPostTag}></i></div>\n  </div>\n)\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/ListTags.js",["137"],"import React from \"react\"\n\nexport default (props) => (\n  <option value={props.tag.id}>{props.tag.name}</option>\n)\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostTable.js",["138","139","140"],"import React, { useState, useContext, useEffect } from \"react\"\nimport { Link, useHistory } from 'react-router-dom'\nimport { PostContext } from \"./PostProvider\"\nimport Post from \"./Post\"\nimport \"./Posts.css\"\n\nexport const PostTable = () => {\n    const { getPosts, posts, searchTerms } = useContext(PostContext)\n    const history = useHistory();\n\n    const [filteredPosts, setFiltered] = useState([])\n\n    // Initialization effect hook -> Go get post data\n    useEffect(() => {\n        getPosts()\n    }, [])\n\n    useEffect(() => {\n        const matchingPosts = posts.filter(post => post.title.toLowerCase().includes(searchTerms.toLowerCase()))\n        setFiltered(matchingPosts)\n    }, [searchTerms])\n\n\n    useEffect(() => {\n        setFiltered(posts)\n    }, [posts])\n\n    return (\n        <div>\n            <div className=\"d-flex flex-row justify-content-end\">\n                <button className=\"d-flex flex-row justify-content-center align-items-center post__add btn btn-primary mr-5\"\n                    onClick={() => history.push(\"/posts/create\")}\n                >\n                    Add Post\n                    <i className=\"fas fa-plus ml-4 mr-2\"></i>\n                </button>\n            </div>\n            <div className=\"posts post__table mt-5 mx-3 px-3\">\n                <table className=\"table table-bordered table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Title</th>\n                            <th scope=\"col\">Author</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Category</th>\n                            <th scope=\"col\">Tags</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            filteredPosts.map(post => (\n                                <tr key={post.id}>\n                                    <td><Link to={`/posts/${post.id}`}>{post.title}</Link></td>\n                                    <td>{post.rareuser && post.rareuser.user.first_name} {post.rareuser && post.rareuser.user.last_name}</td>\n                                    <td>{post.publication_date}</td>\n                                    <td>{post.category && post.category.label}</td>\n                                    <td>{post.tags && post.tags.label}</td>\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":61,"column":25,"nodeType":"151","endLine":61,"endColumn":101},{"ruleId":"149","severity":1,"message":"150","line":54,"column":21,"nodeType":"151","endLine":54,"endColumn":86},{"ruleId":"152","severity":1,"message":"153","line":16,"column":8,"nodeType":"154","endLine":16,"endColumn":10,"suggestions":"155"},{"ruleId":"149","severity":1,"message":"150","line":32,"column":21,"nodeType":"151","endLine":32,"endColumn":103},{"ruleId":"145","severity":1,"message":"156","line":13,"column":13,"nodeType":"147","messageId":"148","endLine":13,"endColumn":17},{"ruleId":"152","severity":1,"message":"157","line":54,"column":8,"nodeType":"154","endLine":54,"endColumn":10,"suggestions":"158"},{"ruleId":"152","severity":1,"message":"159","line":59,"column":8,"nodeType":"154","endLine":59,"endColumn":15,"suggestions":"160"},{"ruleId":"145","severity":1,"message":"161","line":63,"column":15,"nodeType":"147","messageId":"148","endLine":63,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":15,"column":55,"nodeType":"164","messageId":"165","endLine":15,"endColumn":57},{"ruleId":"152","severity":1,"message":"166","line":22,"column":8,"nodeType":"154","endLine":22,"endColumn":10,"suggestions":"167"},{"ruleId":"152","severity":1,"message":"168","line":27,"column":8,"nodeType":"154","endLine":27,"endColumn":21,"suggestions":"169"},{"ruleId":"152","severity":1,"message":"170","line":42,"column":6,"nodeType":"154","endLine":42,"endColumn":8,"suggestions":"171"},{"ruleId":"145","severity":1,"message":"172","line":7,"column":20,"nodeType":"147","messageId":"148","endLine":7,"endColumn":31},{"ruleId":"152","severity":1,"message":"173","line":43,"column":6,"nodeType":"154","endLine":43,"endColumn":8,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":5,"column":1,"nodeType":"177","endLine":21,"endColumn":2},{"ruleId":"152","severity":1,"message":"178","line":28,"column":6,"nodeType":"154","endLine":28,"endColumn":8,"suggestions":"179"},{"ruleId":"141","replacedBy":"180"},{"ruleId":"143","replacedBy":"181"},{"ruleId":"175","severity":1,"message":"176","line":4,"column":1,"nodeType":"177","endLine":14,"endColumn":2},{"ruleId":"175","severity":1,"message":"176","line":5,"column":1,"nodeType":"177","endLine":23,"endColumn":2},{"ruleId":"149","severity":1,"message":"150","line":16,"column":13,"nodeType":"151","endLine":16,"endColumn":89},{"ruleId":"141","replacedBy":"182"},{"ruleId":"143","replacedBy":"183"},{"ruleId":"175","severity":1,"message":"176","line":4,"column":1,"nodeType":"177","endLine":9,"endColumn":2},{"ruleId":"175","severity":1,"message":"176","line":3,"column":1,"nodeType":"177","endLine":5,"endColumn":2},{"ruleId":"145","severity":1,"message":"184","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":12},{"ruleId":"152","severity":1,"message":"185","line":16,"column":8,"nodeType":"154","endLine":16,"endColumn":10,"suggestions":"186"},{"ruleId":"152","severity":1,"message":"168","line":21,"column":8,"nodeType":"154","endLine":21,"endColumn":21,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPostById' and 'props.match.params.postId'. Either include them or remove the dependency array.","ArrayExpression",["190"],"'tags' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCategories', 'getPosts', and 'getTags'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has a missing dependency: 'getPostInEditMode'. Either include it or remove the dependency array.",["192"],"'now' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getPosts', 'getPostsByUserId', and 'props.location'. Either include them or remove the dependency array.",["193"],"React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.",["194"],"React Hook useEffect has a missing dependency: 'getTags'. Either include it or remove the dependency array.",["195"],"'setPostTags' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["196"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'getTags', 'getTagsByPostId', and 'props.postId'. Either include them or remove the dependency array.",["197"],["188"],["189"],["188"],["189"],"'Post' is defined but never used.","React Hook useEffect has a missing dependency: 'getPosts'. Either include it or remove the dependency array.",["198"],["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"208","fix":"218"},"Update the dependencies array to be: [getPostById, props.match.params.postId]",{"range":"219","text":"220"},"Update the dependencies array to be: [getCategories, getPosts, getTags]",{"range":"221","text":"222"},"Update the dependencies array to be: [getPostInEditMode, posts]",{"range":"223","text":"224"},"Update the dependencies array to be: [getPosts, getPostsByUserId, props.location]",{"range":"225","text":"226"},"Update the dependencies array to be: [posts, searchTerms]",{"range":"227","text":"228"},"Update the dependencies array to be: [getTags]",{"range":"229","text":"230"},"Update the dependencies array to be: [getCategories]",{"range":"231","text":"232"},"Update the dependencies array to be: [getTags, getTagsByPostId, props.postId]",{"range":"233","text":"234"},"Update the dependencies array to be: [getPosts]",{"range":"235","text":"236"},{"range":"237","text":"228"},[488,490],"[getPostById, props.match.params.postId]",[1892,1894],"[getCategories, getPosts, getTags]",[2022,2029],"[getPostInEditMode, posts]",[719,721],"[getPosts, getPostsByUserId, props.location]",[901,914],"[posts, searchTerms]",[1226,1228],"[getTags]",[1453,1455],"[getCategories]",[732,734],"[getTags, getTagsByPostId, props.postId]",[502,504],"[getPosts]",[684,697]]