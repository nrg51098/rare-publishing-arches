[{"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/index.js":"1","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/Rare.js":"2","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/AuthProvider.js":"3","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Register.js":"4","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Login.js":"5","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/ApplicationViews.js":"6","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostSearch.js":"7","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostDetail.js":"8","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostProvider.js":"9","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostTable.js":"10","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagList.js":"11","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagProvider.js":"12","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryProvider.js":"13","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostForm.js":"14","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostList.js":"15","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryPost.js":"16","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/CommentProvider.js":"17","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/PostComments.js":"18","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/users/UserTable.js":"19","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/users/UserProfile.js":"20","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryList.js":"21","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/nav/NavBar.js":"22","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/tag.js":"23","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/Comment.js":"24","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/Post.js":"25","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/Category.js":"26","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/reactions/ReactionProvider.js":"27","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/reactions/ReactionSelector.js":"28","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/reactions/PostReaction.js":"29","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/reactions/ReactionForm.js":"30"},{"size":387,"mtime":1608076932786,"results":"31","hashOfConfig":"32"},{"size":1133,"mtime":1609861212651,"results":"33","hashOfConfig":"32"},{"size":3197,"mtime":1610821772933,"results":"34","hashOfConfig":"32"},{"size":4107,"mtime":1607793007525,"results":"35","hashOfConfig":"32"},{"size":3089,"mtime":1607793007524,"results":"36","hashOfConfig":"32"},{"size":5522,"mtime":1610810003479,"results":"37","hashOfConfig":"32"},{"size":713,"mtime":1610821786988,"results":"38","hashOfConfig":"32"},{"size":7205,"mtime":1610810003481,"results":"39","hashOfConfig":"32"},{"size":3870,"mtime":1610817091547,"results":"40","hashOfConfig":"32"},{"size":6715,"mtime":1610821786988,"results":"41","hashOfConfig":"32"},{"size":3317,"mtime":1608095639036,"results":"42","hashOfConfig":"32"},{"size":2010,"mtime":1610821786989,"results":"43","hashOfConfig":"32"},{"size":1874,"mtime":1610409665571,"results":"44","hashOfConfig":"32"},{"size":7515,"mtime":1610338382738,"results":"45","hashOfConfig":"32"},{"size":3782,"mtime":1610810003482,"results":"46","hashOfConfig":"32"},{"size":1910,"mtime":1610810003479,"results":"47","hashOfConfig":"32"},{"size":3484,"mtime":1608391526411,"results":"48","hashOfConfig":"32"},{"size":6216,"mtime":1609807008920,"results":"49","hashOfConfig":"32"},{"size":7237,"mtime":1610338382739,"results":"50","hashOfConfig":"32"},{"size":2407,"mtime":1610821772935,"results":"51","hashOfConfig":"32"},{"size":3555,"mtime":1610209966931,"results":"52","hashOfConfig":"32"},{"size":3552,"mtime":1610209215198,"results":"53","hashOfConfig":"32"},{"size":519,"mtime":1608095639039,"results":"54","hashOfConfig":"32"},{"size":1116,"mtime":1609548924173,"results":"55","hashOfConfig":"32"},{"size":1605,"mtime":1610810003481,"results":"56","hashOfConfig":"32"},{"size":845,"mtime":1610324456341,"results":"57","hashOfConfig":"32"},{"size":1960,"mtime":1610821772934,"results":"58","hashOfConfig":"32"},{"size":2843,"mtime":1610821772935,"results":"59","hashOfConfig":"32"},{"size":328,"mtime":1610810003482,"results":"60","hashOfConfig":"32"},{"size":2322,"mtime":1610821772934,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"k1i1yd",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/index.js",[],["137","138"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/Rare.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/AuthProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Register.js",["139","140"],"import React, { useRef } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const username = useRef()\n    const password = useRef()\n    const verifyPassword = useRef()\n    const passwordDialog = useRef()\n    const bio = useRef()\n    const profileUrl = useRef()\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (password.current.value === verifyPassword.current.value) {\n            const newUser = {\n                \"first_name\": firstName.current.value,\n                \"last_name\": lastName.current.value,\n                \"email\": email.current.value,\n                \"username\": username.current.value,\n                \"bio\": bio.current.value,\n                \"profile_image_url\": profileUrl.current.value,\n                \"password\": password.current.value,\n            }\n\n            return fetch(\"http://127.0.0.1:8000/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Accept\": \"application/json\"\n                },\n                body: JSON.stringify(newUser)\n            })\n                .then(res => res.json())\n                .then(res => {\n                    if (\"token\" in res) {\n                        localStorage.setItem(\"rare_user_id\", res.token)\n                        props.history.push(\"/\")\n                    }\n                })\n        } else {\n            passwordDialog.current.showModal()\n        }\n    }\n\n    return (\n        <main className=\"container-md vh-100\">\n            <dialog className=\"dialog dialog--password\" ref={passwordDialog}>\n                <div>Passwords do not match</div>\n                    <button className=\"button--close\" onClick={e => passwordDialog.current.close()}>Close</button>\n            </dialog>\n            <header className=\"mt-5 text-center\">\n                <h1>Rare</h1>\n            </header>\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <div className=\"d-flex flex-row justify-content-center align-items-center mt-5\">\n                    <div className=\"d-flex flex-column w-100 text-center mr-5\">\n                        <img className=\"mb-5 img-fluid\" src=\"https://via.placeholder.com/300x200\" />\n                        <input ref={firstName} name=\"firstName\" type=\"text\" id=\"register--first-name\" className=\"form-control mb-5\" placeholder=\"First Name\" required autoFocus />\n                        <input ref={lastName} name=\"lastname\" type=\"text\" id=\"register--last-name\" className=\"form-control mb-5\" placeholder=\"Last Name\" required />\n                        <input ref={email} name=\"email\" type=\"email\" id=\"register--email\" className=\"form-control mb-5\" placeholder=\"Email\" required />\n                    </div>\n                    <div className=\"d-flex flex-column w-100 text-center\">\n                        <input ref={username} name=\"username\" type=\"text\" id=\"register--username\" className=\"form-control mb-5\" placeholder=\"Username\" required />\n                        <input ref={password} name=\"password\" type=\"password\" id=\"register--password\" className=\"form-control mb-5\" placeholder=\"Password\" required />\n                        <input ref={verifyPassword} name=\"verifyPassword\" type=\"password\" id=\"register--verify-password\" className=\"form-control mb-5\" placeholder=\"Verify Password\" required />\n                        <input ref={profileUrl} name=\"profileUrl\" type=\"text\" id=\"register--profile-pic\" className=\"form-control mb-5\" placeholder=\"Profile Pic URL\" required />\n                        <textarea ref={bio} name=\"bio\" type=\"text\" id=\"register--bio\" className=\"form-control mb-5\" placeholder=\"Bio\" rows=\"4\" required />\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <button className=\"btn btn-outline-primary w-50\" type=\"submit\">Register</button>\n                </div>\n            </form>\n        </main>\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/auth/Login.js",["141"],"import React, { useRef } from \"react\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport \"./Auth.css\"\n\nexport const Login = () => {\n    const username = useRef()\n    const password = useRef()\n    const invalidDialog = useRef()\n    const errorDialog = useRef()\n    const history = useHistory()\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        return fetch('http://127.0.0.1:8000/login', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({\n                username: username.current.value,\n                password: password.current.value\n            })\n        })\n            .then(res => res.json())\n            .then(res => {\n                if (\"valid\" in res && res.valid) {\n                    localStorage.setItem(\"rare_user_id\", res.token)\n                    history.push(\"/\")\n                }\n                else {\n                    invalidDialog.current.showModal()\n                }\n            })\n            .catch(err => errorDialog.current.showModal())\n    }\n\n    return (\n        <main className=\"container vh-100\">\n            <dialog className=\"dialog dialog--auth\" ref={invalidDialog}>\n                <div>Email or password was not valid.</div>\n                <button className=\"button--close\" onClick={e => invalidDialog.current.close()}>Close</button>\n            </dialog>\n            <dialog className=\"dialog dialog--auth\" ref={errorDialog}>\n                <div>Could not contact server.</div>\n                <button className=\"button--close\" onClick={e => errorDialog.current.close()}>Close</button>\n            </dialog>\n            <header>\n                <h1 className=\"mt-5 text-center\">Rare</h1>\n            </header>\n            <div className=\"mt-5\">\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                    <img className=\"mt-5\" src=\"https://via.placeholder.com/200x75\" />\n                </div>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center align-items-center h-50\">\n                <form onSubmit={handleLogin}>\n                    <input ref={username} type=\"text\" id=\"username\" className=\"form-control mb-5\" placeholder=\"Username\" required autoFocus />\n                    <input ref={password} type=\"password\" id=\"password\" className=\"form-control mb-5\" placeholder=\"Password\" required />\n                    <div className=\"d-flex justify-content-center\">\n                        <button className=\"btn btn-outline-primary w-100\" type=\"submit\">Login</button>\n                    </div>\n                </form>\n                <div className=\"mt-3\">\n                    <small className=\"underline text-primary\">\n                        <Link to=\"/register\">\n                            Don't have an account yet? Click here to sign up!\n                        </Link>\n                    </small>\n                </div>\n            </div>\n        </main >\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/ApplicationViews.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostSearch.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostDetail.js",["142","143","144","145"],"import React, { useContext, useEffect, useState, useRef } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { PostContext } from \"./PostProvider\"\nimport { PostReaction } from \"../reactions/PostReaction\"\nimport { ReactionContext } from \"../reactions/ReactionProvider\"\nimport { ReactionSelector } from \"../reactions/ReactionSelector\"\nimport \"./Posts.css\"\n\nexport const PostDetails = (props) => {\n    const { getPostById, releasePost } = useContext(PostContext)\n    const { reactionsList, getReactions } = useContext(ReactionContext)\n    const history = useHistory();\n    const deletePostModal = useRef();\n\n    const [post, setPost] = useState({})\n\n    const [reactionCounts, setReactionCounts] = useState([])\n    const [showReactionSelector, setShowReactionSelector] = useState(false)\n    const [currentUserPostReactions, setCurrentUserPostReactions] = useState([])\n\n    useEffect(() => {\n        const postId = parseInt(props.match.params.postId)\n        getPostById(postId)\n            .then(setPost)\n    }, [])\n\n    useEffect(() => {\n        getReactions()\n    }, [])\n\n    const getReactionCounts = (reactionsArray) => {\n        var reactionCountsArray = [];\n        var reactionCounts = {}\n\n        // Initialize the reactionCounts array with the reaction and its respective count\n        reactionsArray.forEach(reaction => {\n            reactionCounts[reaction.reaction.id] = { ...reaction.reaction, \"count\": 0 }\n        })\n\n        // Loop over each reaction on the post and count the unique reactions\n        reactionsArray.forEach(reaction => {\n            reactionCounts[reaction.reaction.id].count += 1\n            // reactionCounts[reaction.reaction.id].users.push(reaction.user.id)\n        })\n\n        Object.keys(reactionCounts).forEach(reaction => {\n            reactionCountsArray.push(reactionCounts[reaction])\n        })\n\n        // Set the counts of the unique reactions\n        setReactionCounts(reactionCountsArray)\n    }\n\n    useEffect(() => {\n        post.reactions && getReactionCounts(post.reactions)\n    }, [post])\n\n    useEffect(() => {\n        const body = { \"token\": `${localStorage.getItem(\"rare_user_id\")}` }\n        fetch(\"http://localhost:8000/get_current_user\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Token ${localStorage.getItem(\"rare_user_id\")}`\n            },\n            body: JSON.stringify(body)\n        })\n            .then(res => res.json())\n            .then(res => {\n                const userReactions = [];\n                post.reactions && post.reactions.forEach(postReaction => {\n                    if (postReaction.user.id === res.user_id) {\n                        userReactions.push(postReaction.reaction.id)\n                    }\n                })\n                setCurrentUserPostReactions(userReactions);\n            })\n    }, [reactionCounts])\n\n    return (\n        <section className=\"post d-flex flex-row\">\n            <dialog className=\"dialog dialog--deletePost\" ref={deletePostModal}>\n                <h4>Are you sure you want to delete this post?</h4>\n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                    <button className=\"deletePost btn btn-outline-primary\" onClick={() => {\n                        releasePost(post.id)\n                            .then(history.push(\"/posts\"))\n                    }}>Ok</button>\n                    <button className=\"btn btn-outline-primary\" onClick={e => deletePostModal.current.close()}>Cancel</button>\n                </div>\n            </dialog>\n            <div className=\"post_details d-flex flex-column container mr-0\">\n                <h3 className=\"post__title text-center\">{post.title}</h3>\n                <div className=\"d-flex flex-row justify-content-between\">\n                    <div className=\"post__manage__buttons\">\n                        <i className=\"fas fa-trash-alt post__hover__delete\" onClick={() => {\n                            deletePostModal.current.showModal()\n                        }}></i>\n                        <i className=\"fas fa-cog post__hover\" onClick={() => history.push(`/posts/edit/${post.id}`)}></i>\n                    </div>\n                    <div>\n                        <small>{post.category && post.category.label}</small>\n                    </div>\n                </div>\n                <div className=\"text-center\">\n                    <img className=\"mb-5 img-fluid w-100\" src=\"https://via.placeholder.com/400x100\" />\n                </div>\n                <div className=\"d-flex flex-row justify-content-between align-items-center\">\n                    <div>\n                        <small >Published on {post.publication_date} </small>\n                        <small className=\"d-block\"> By {post.rareuser && post.rareuser.user.first_name} {post.rareuser && post.rareuser.user.last_name}</small>\n                    </div>\n                    <div>\n                        <button className=\"btn btn-outline-primary mt-0\" onClick={() => history.push(`/post/${post.id}/comments`)}>View Comments</button>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-column align-items-center border border-primary rounded px-3 h-100 reaction__container\" onClick={() => { setShowReactionSelector(prev => !prev) }}>\n                            <div className=\"d-flex flex-row\">\n                                {post.reactions && post.reactions.length > 0 ? (\n                                    reactionCounts && reactionCounts.map(reaction => (\n                                        <PostReaction key={reaction.id} reaction={reaction} />\n                                    ))\n                                ) : ('No Reactions Yet.')}</div>\n                            <div>Click here to {showReactionSelector ? 'hide' : 'show'} reaction picker</div>\n                        </div>\n                        {showReactionSelector ? (\n                            <div className=\"text-center\">\n                                <strong>Reaction Selector</strong>\n                                <ReactionSelector\n                                    reactionsList={reactionsList} currentUserPostReactions={currentUserPostReactions}\n                                    setCurrentUserPostReactions={setCurrentUserPostReactions}\n                                    getReactions={getReactions}\n                                    getReactionCounts={getReactionCounts}\n                                    getPostById={getPostById}\n                                    setPost={setPost}\n                                />\n                            </div>\n                        ) : ('')}\n                    </div>\n                </div>\n                <div className=\"post__content\">\n                    {post.content}\n                </div>\n            </div>\n            <div className=\"mr-auto\">\n                {post.tags && post.tags.map(tag => (\n                    <div key={tag.id} className=\"d-flex align-items-center border border-primary rounded px-5 mb-3\">{tag.label}</div>\n                ))}\n            </div>\n        </section>\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostTable.js",["146","147","148","149","150","151"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagList.js",["152"],"import React, { useContext, useState, useEffect, useRef } from \"react\"\nimport { TagContext } from \"./TagProvider\"\nimport Tag from \"./tag\"\n\nexport const TagList = (props) => {\n  const editTagDialog = useRef()\n  const deleteTagDialog = useRef()\n  const { tags, getTags, createTag, updateTag, deleteTag } = useContext(TagContext)\n  const [newTag, setNewTag] = useState(\"\")\n  const [editedTag, setEditTag] = useState(\"\")\n  const [isEditing, setIsEditing] = useState(false)\n  const [editTagId, setEditTagId] = useState(0)\n  const [deletedTagId, setDeletedTagId] = useState(0) \n\n  const handleInput = (e) => {\n      if (isEditing) {\n        updateTag({ id: editTagId, label: editedTag })\n        .then(editTagDialog.current.close())\n        .then(setEditTag(\"\"))\n        .then(setIsEditing(false))\n      } else {\n        createTag({ label: newTag })\n        .then(setNewTag(\"\"))\n      }\n  }\n\n  const editATag = (e) => {\n    setEditTag(e.target.dataset.tagname)\n    setEditTagId(e.target.id)\n    setIsEditing(true)\n    editTagDialog.current.showModal()\n  }\n\n  const deleteATag = (e) => {\n    deleteTag(deletedTagId)\n    .then(deleteTagDialog.current.close())\n    .then(setDeletedTagId(0))\n  }\n\n  useEffect(() => {\n    getTags()\n  }, [])\n\n  return (\n      <div className=\"d-flex flex-row justify-content-around\">\n        <dialog className=\"dialog dialog--editTag\" ref={editTagDialog}>\n              <div className=\"d-flex flex-column justify-content-around align-items-center\">\n                <h4>Edit this tag</h4>\n                <input className=\"editTagInput form-control mb-5\" type=\"text\" placeholder=\"Add text\" value={editedTag} onChange={e => {\n                  setEditTag(e.target.value)\n                }}></input>\n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                  <button className=\"createTag btn btn-outline-primary\" onClick={handleInput}>Ok</button>\n                  <button className=\"btn btn-outline-primary\" onClick={e => editTagDialog.current.close()}>Close</button>\n                </div>\n              </div>\n            </dialog>\n            <dialog className=\"dialog dialog--deleteTag text-center\" ref={deleteTagDialog}>\n                <h4>Are you sure you want to delete this tag?</h4>\n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                  <button className=\"deleteTag btn btn-outline-primary\" onClick={deleteATag}>Ok</button>\n                  <button className=\"btn btn-outline-primary\" onClick={e => deleteTagDialog.current.close()}>Close</button>\n                </div>\n            </dialog>\n        <div className=\"allTags\">\n          {\n            tags.map(tag => <Tag key={tag.id} tag={tag} deleteTagDialog={deleteTagDialog} setDeletedTagId={setDeletedTagId} editATag={editATag} />)\n          }\n        </div>\n        <div> \n          <div className=\"addTagForm d-flex flex-column justify-content-around align-items-center\">\n            <h2>Create a new tag</h2>\n            <input className=\"tagInput\" type=\"text\" placeholder=\"Add text\" value={newTag} onChange={e => {\n              setNewTag(e.target.value)\n            }}></input>\n            <button className=\"createTag\" onClick={handleInput}>Create</button>\n          </div>\n        </div>\n      </div>\n  )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/TagProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostForm.js",["153","154","155"],"import React, { useContext, useState, useEffect, Fragment } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { PostContext } from \"./PostProvider\"\nimport { CategoryContext } from \"../categories/CategoryProvider\"\nimport { TagContext } from \"../tags/TagProvider\"\n\n\nexport const PostForm = (props) => {\n    // Use the required context providers for data\n    const { addPost, posts, updatePost, getPosts } = useContext(PostContext)\n    // const { profile, getProfile } = useContext(ProfileContext)\n\n    // Tags data\n    const { tags, getTags } = useContext(TagContext)\n\n    // Categories data\n    const { categories, getCategories } = useContext(CategoryContext)\n\n    // Component state\n    const [post, setPost] = useState({})\n    const [newTags, setNewTags] = useState([])\n\n    // History\n    const history = useHistory();\n\n    // Is there a a URL parameter??\n    const editMode = props.match.params.hasOwnProperty(\"postId\")  // true or false\n\n    const handleControlledInputChange = (event) => {\n        /*\n            When changing a state object or array, always create a new one\n            and change state instead of modifying current one\n        */\n        const newPost = Object.assign({}, post)          // Create copy\n        newPost[event.target.name] = event.target.value    // Modify copy\n        setPost(newPost)                                 // Set copy as new state\n    }\n\n    const handleTagUpdate = e => {\n        const updatedTagArray = []\n        newTags.forEach(loopTag => {\n            const newTag = {\n                id: loopTag.id,\n                label: loopTag.label,\n                isChecked: parseInt(e.target.value) === loopTag.id ?\n                    e.target.checked\n                        ? true : false\n                    : loopTag.isChecked ? true : false\n            }\n            updatedTagArray.push(newTag)\n        })\n        setNewTags(updatedTagArray)\n    }\n\n    /*\n        If there is a URL parameter, then the user has chosen to\n        edit an post.\n            1. Get the value of the URL parameter.\n            2. Use that `id` to find the post.\n            3. Update component state variable.\n    */\n    const getPostInEditMode = () => {\n        if (editMode) {\n            const postId = parseInt(props.match.params.postId)\n            const selectedPost = posts.find(a => a.id === postId) || {}\n            selectedPost.category\n                ? selectedPost.category_id = selectedPost.category.id\n                : selectedPost.category_id = 0\n            setPost(selectedPost)\n        }\n    }\n\n    const createNewTags = () => {\n        const tempTags = []\n        tags && tags.map(tag => tempTags.push({ id: tag.id, label: tag.label, isChecked: post.tags && post.tags.find(t => t.id === tag.id) ? true : false }))\n        setNewTags(tempTags)\n    }\n\n    // Get data from API when component initilizes\n    useEffect(() => {\n        getPosts();\n        getTags();\n        getCategories();\n    }, [])\n\n    // Once provider state is updated, determine the post (if edit)\n    useEffect(() => {\n        getPostInEditMode()\n    }, [posts])\n\n    useEffect(() => {\n        createNewTags()\n    }, [post, tags])\n\n\n    const constructNewPost = () => {\n        const postTagsArray = newTags.filter(pt => pt.isChecked === true).map(nt => nt.id)\n\n        if (editMode) {\n            // PUT\n            updatePost({\n                id: post.id,\n                title: post.title,\n                content: post.content,\n                category_id: parseInt(post.category_id),\n                publication_date: post.publication_date,\n                author_id: post.rareuser.id,\n                image_url: post.image_url,\n                tags: postTagsArray\n            })\n                .then(() => props.history.push(`/posts/${post.id}`))\n        } else {\n            // POST\n            addPost({\n                title: post.title,\n                content: post.content,\n                category_id: post.category_id,\n                image_url: post.image_url,\n                tags: postTagsArray\n            })\n                .then((newlyCreatedPost) => props.history.push(`/posts/${newlyCreatedPost.id}`))\n        }\n\n    }\n\n    return (\n        <div className=\"container w-50\">\n            <form className=\"postForm\">\n                <h2 className=\"postForm__title\">{editMode ? \"Update Post\" : \"New Post\"}</h2>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"title\" required autoFocus className=\"form-control w-75\"\n                            placeholder=\"Post title\"\n                            defaultValue={post.title}\n                            onChange={handleControlledInputChange}\n                        />\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"image_url\" className=\"form-control w-75\"\n                            placeholder=\"Image URL\"\n                            defaultValue={post.image_url}\n                            onChange={handleControlledInputChange}>\n                        </input>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <textarea rows=\"7\" type=\"text\" name=\"content\" required className=\"form-control\"\n                            placeholder=\"Article content\"\n                            value={post.content}\n                            onChange={handleControlledInputChange}>\n                        </textarea>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <select name=\"category_id\" className=\"form-control w-50\" value={post.category_id || ((post.category && post.category.id) || \"0\")} onChange={handleControlledInputChange}>\n                            <option value=\"0\" disabled>Category Select</option>\n                            {categories.map(category => (\n                                <option key={category.id} value={category.id}>{category.label}</option>\n                            ))}\n                        </select>\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <div className=\"d-flex flex-row flex-wrap form-check form-check-inline mb-3\">\n                        {\n                            newTags.map(tag => (\n                                <Fragment key={tag.id}>\n                                    <input type=\"checkbox\" name=\"tags\" className=\"form-check-input\" value={tag.id} checked={tag.isChecked} onChange={handleTagUpdate} />\n                                    <label htmlFor=\"tagsToAdd\" className=\"form-check-label\">{tag.label}</label>\n                                </Fragment>\n                            ))\n                        }\n                    </div>\n                </fieldset>\n\n                <button type=\"submit\"\n                    onClick={evt => {\n                        evt.preventDefault()\n                        constructNewPost()\n                    }}\n                    className=\"btn btn-primary\">\n                    {editMode ? \"Save\" : \"Publish\"}\n                </button>\n                <button type=\"button\" onClick={() => history.goBack()}\n                    className=\"btn btn-secondary ml-5\">Cancel</button>\n            </form>\n        </div>\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/PostList.js",["156","157","158"],"import React, { useState, useContext, useEffect, useRef } from \"react\"\nimport { useHistory } from 'react-router-dom'\nimport { PostContext } from \"./PostProvider\"\nimport { AuthContext } from '../auth/AuthProvider'\nimport Post from \"./Post\"\nimport \"./Posts.css\"\n\nexport const PostList = (props) => {\n    const { getPosts, posts, searchTerms, getPostsByUserId, getPostsByCurrentUserId, releasePost } = useContext(PostContext)\n    const { getUserById } = useContext(AuthContext)\n    const [userProfile, setUserProfile] = useState({})\n\n    const history = useHistory()\n    const deletePostModal = useRef()\n\n    const [filteredPosts, setFiltered] = useState([])\n    const [deletePostId, setDeletePostId] = useState(0)\n\n    const deleteAPost = (id) => {\n        releasePost(deletePostId)\n            .then(setDeletePostId())\n            .then(deletePostModal.current.close())\n    }\n\n    // Initialization effect hook -> Go get post data\n    useEffect(() => {\n        if (props.location && props.location.pathname.includes('/user/posts') && props.match.params.userId) {\n            // get posts by user id\n            getPostsByUserId(parseInt(props.match.params.userId))\n        } else if (props.location && props.location.pathname === '/user/posts') {\n            getPostsByCurrentUserId()\n        } else {\n            // get all posts\n            getPosts()\n        }\n    }, [])\n\n    useEffect(() => {\n        posts.sort((a, b) => (a.publication_date > b.publication_date) ? -1 : 1)\n        const matchingPosts = posts.filter(post => post.title.toLowerCase().includes(searchTerms.toLowerCase()))\n        const validPosts = matchingPosts.filter((post) => (Date.parse(post.publication_date) < Date.now()) && (post.approved === true))\n        setFiltered(validPosts)\n    }, [searchTerms])\n\n    useEffect(() => {\n        posts.sort((a, b) => (a.publication_date > b.publication_date) ? -1 : 1)\n        const validPosts = posts.filter((post) => (Date.parse(post.publication_date) < Date.now()) && (post.approved === true))\n        setFiltered(validPosts)\n    }, [posts])\n\n    useEffect(() => {\n        const userId = props.match && parseInt(props.match.params.userId)\n        getUserById(userId ? userId : localStorage.getItem(\"rare_user_id\"))\n            .then(setUserProfile)\n    }, [])\n\n\n    return (\n        <div>\n            <div className=\"d-flex flex-row justify-content-end\">\n                <button className=\"d-flex flex-row justify-content-center align-items-center post__add btn btn-primary mr-5\"\n                    onClick={() => history.push(\"/posts/create\")}\n                >\n                    Add Post\n                    <i className=\"fas fa-plus ml-4 mr-2\"></i>\n                </button>\n            </div>\n            <dialog className=\"dialog dialog--deletePost\" ref={deletePostModal}>\n                <h4>Are you sure you want to delete this post?</h4>\n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                    <button className=\"deletePost btn btn-outline-primary\" onClick={deleteAPost}>Ok</button>\n                    <button className=\"btn btn-outline-primary\" onClick={e => deletePostModal.current.close()}>Cancel</button>\n                </div>\n            </dialog>\n            <div className=\"posts post__list mt-5 mx-5 px-3\">\n                <h2>{\n                    props.location && props.location.pathname.includes('/user/posts')\n                    && userProfile.user && `${userProfile.user.first_name} ${userProfile.user.last_name}'s Posts`\n                }</h2>\n                {\n                    filteredPosts.map(post => <Post key={post.id} post={post} setDeletePostId={setDeletePostId} deletePostModal={deletePostModal} />)\n                }\n            </div>\n        </div>\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryPost.js",["159","160"],"import React, { useState, useContext, useEffect, useRef } from \"react\"\nimport { CategoryContext } from \"./CategoryProvider\"\nimport { PostContext } from \"../posts/PostProvider\"\nimport Post from \"../posts/Post\"\nimport \"./CategoryPost.css\"\n\n\nexport const CategoryPost = (props) => {\n  const { categories, getPostByCategoryId } = useContext(CategoryContext)\n  const { releasePost } = useContext(PostContext)\n\n  const deletePostModal = useRef()\n\n  const [posts, setPost] = useState([])\n  const [deletePostId, setDeletePostId] = useState(0)\n\n  const deleteAPost = (e) => {\n    releasePost(deletePostId)\n      .then(setDeletePostId())\n      .then(deletePostModal.current.close())\n  }\n\n  useEffect(() => {\n    const categoryId = parseInt(props.match.params.categoryId)\n    getPostByCategoryId(categoryId)\n      .then(setPost)\n  }, [])\n\n  return (\n    <section>\n      <dialog className=\"dialog dialog--deletePost\" ref={deletePostModal}>\n        <h4>Are you sure you want to delete this post?</h4>\n        <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n          <button className=\"deletePost btn btn-outline-primary\" onClick={deleteAPost}>Ok</button>\n          <button className=\"btn btn-outline-primary\" onClick={e => deletePostModal.current.close()}>Cancel</button>\n        </div>\n      </dialog>\n      <div className=\"categoryPostContainer\">\n        <div className=\"categoryPost__title\" id={props.match.params.categoryId}>\n          <h1>{categories.find(category => category.id == props.match.params.categoryId).label}</h1>\n        </div>\n        <div className=\"d-flex flex-row justify-content-end\"></div>\n        <div className=\"category__post post__list mt-5 mx-5 px-3\">\n          {\n            posts.map(post => <Post key={post.id} post={post} setDeletePostId={setDeletePostId} deletePostModal={deletePostModal} />)\n          }\n        </div>\n      </div>\n    </section>\n  )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/CommentProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/PostComments.js",["161"],"import React, { useState, useContext, useEffect, useRef } from \"react\"\nimport { CommentContext } from \"./CommentProvider\"\nimport { Comment } from \"./Comment\"\nimport \"./PostComments.css\"\n\n\nexport const PostComments = (props) => {\n\n    const editCommentDialog = useRef()\n    const deleteCommentDialog = useRef()\n\n    \n    const { addComment, releaseComment, updateComment, getCommentsByPostId } = useContext(CommentContext)\n    \n    \n    const [editedSubject, setEditSubject] = useState(\"\")    \n    const [editedContent, setEditContent] = useState(\"\")    \n    const [editCommentId, setEditCommentId] = useState(0)\n    const [deletedCommentId, setDeletedCommentId] = useState(0)\n    \n\n    const [filteredComments, setFilteredComments] = useState([])\n    const postId = parseInt(props.match.params.postId)\n\n    useEffect(() => {        \n        getCommentsByPostId(postId)\n            .then(comments => comments.sort((a, b) => (a.created_on > b.created_on) ? -1 : 1))\n            .then(comments => comments.filter((comment) => (Date.parse(comment.created_on) < Date.now())))       \n            .then(setFilteredComments)           \n    }, [])\n\n  \n    // Component state\n    const [comment, setComment] = useState({})\n    \n\n    const handleControlledInputChange = (event) => {\n        /*\n            When changing a state object or array, always create a new one\n            and change state instead of modifying current one\n        */\n        const newComment = Object.assign({}, comment)          // Create copy\n        newComment[event.target.name] = event.target.value    // Modify copy\n        setComment(newComment)                                 // Set copy as new state\n    } \n\n\n    const handleInput = () => { \n        \n            // POST\n            console.log(\"adding a comment\")\n            addComment({\n                post_id: postId,\n                subject: comment.subject,\n                content: comment.content,                \n            })\n            .then(() => props.history.push(`/posts/${postId}`))\n    }\n\n    const handleEditInput =() => {\n        updateComment({\n            id: editCommentId,\n            subject: editedSubject,\n            content: editedContent\n        })\n        .then(() => props.history.push(`/posts/${postId}`)) \n    }\n\n  \n    const editAComment = (e) => {\n      console.log(e.target)\n      setEditSubject(e.target.dataset.commentsubject)\n      setEditContent(e.target.dataset.commentcontent)\n      setEditCommentId(e.target.id)\n      editCommentDialog.current.showModal()\n    }\n  \n    const deleteAComment = (e) => {\n      releaseComment(deletedCommentId)\n      .then(deleteCommentDialog.current.close())\n      .then(setDeletedCommentId(0))\n      .then(() => props.history.push(`/posts/${postId}`))\n    }   \n\n    return (\n        <div className=\"container\">\n\n            <div className=\"\">\n                    <div className=\"row justify-content-center\"> \n                        <div className=\"addCommentForm d-flex flex-column justify-content-around align-items-center\">\n                            <h2>Post Title's Comments</h2>\n                            <input className=\"commentInput\" name=\"subject\" type=\"text\" placeholder=\"Add subject\" defaultValue={comment.subject} onChange={handleControlledInputChange}></input>\n                            <textarea className=\"commentInput\" name=\"content\" type=\"text\" placeholder=\"Add content\" value={comment.content} onChange={handleControlledInputChange}></textarea>\n                            <button className=\"btn btn-outline-primary mt-3\" onClick={handleInput}>Create</button>\n                            <button className=\"btn btn-outline-primary mt-3\" onClick={() => props.history.push(`/posts/${postId}`)}>Back to post</button>\n                            \n                            \n                        </div>\n                    </div>\n                    <dialog className=\"dialog dialog--editComment\" ref={editCommentDialog}>\n                        <div className=\"d-flex flex-column justify-content-around align-items-center\">\n                            <h4>Edit this comment</h4>\n                            <input className=\"form-control mb-5\" type=\"text\" placeholder=\"Add subject\" value={editedSubject} onChange={e => {\n                            setEditSubject(e.target.value)\n                            }}></input>\n                            <input className=\"form-control mb-5\" type=\"text\" placeholder=\"Add content\" value={editedContent} onChange={e => {\n                            setEditContent(e.target.value)\n                            }}></input>\n                            <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                            <button className=\"createComment btn btn-outline-primary\" onClick={handleEditInput}>Ok</button>\n                            <button className=\"btn btn-outline-primary\" onClick={e => editCommentDialog.current.close()}>Close</button>\n                            </div>\n                        </div>\n                    </dialog>\n                    <dialog className=\"dialog dialog--deleteComment text-center\" ref={deleteCommentDialog}>\n                        <h4>Are you sure you want to delete this comment?</h4>\n                        <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                        <button className=\"deleteComment btn btn-outline-primary\" onClick={deleteAComment}>Ok</button>\n                        <button className=\"btn btn-outline-primary\" onClick={e => deleteCommentDialog.current.close()}>Close</button>\n                        </div>\n                    </dialog>\n                    <div className=\"container\">\n                        <div className=\"row justify-content-around\">\n                        {\n                           filteredComments.map(comment => <Comment key={comment.id} comment={comment} deleteCommentDialog={deleteCommentDialog} setComment={setComment} setDeletedCommentId={setDeletedCommentId} editAComment={editAComment} />)\n                        }\n                        </div>\n                    </div>\n                    \n            </div>           \n            \n        </div>\n    )\n}","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/users/UserTable.js",["162","163"],"import React, { useState, useContext, useEffect, useRef } from \"react\"\nimport { Link, useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/AuthProvider'\nimport \"./Users.css\"\n\nexport const UserTable = () => {\n    const { isAdmin, getUsers, users, partialyUpdateUser } = useContext(AuthContext)\n    const [sortedUsers, setSortedUsers] = useState([])   \n    const deleteUserModal = useRef(); \n    const tempPopupModal = useRef();\n    const changeUserTypeModal = useRef();\n    const history = useHistory();\n\n    const [selectedUser, setSelectedUser] = useState(0)\n    const [checkboxStatus, setCheckboxStatus] = useState(true)\n    const [adminRadioStatus, setAdminRadioStatus] = useState(false)\n\n    useEffect(() => {\n        getUsers()        \n    }, [])\n\n    useEffect(() => {\n        const tempSortedUsers = users.sort((a, b) => (a.user.username.toLowerCase() < b.user.username.toLowerCase()) ? -1 : 1)\n        setSortedUsers(tempSortedUsers)\n    }, [users])\n\n    const handleUserType = e => {\n        const rareuserId = selectedUser\n        const selectedRareuser = users.find((rareuser)=> rareuser.id === rareuserId)\n        const userId = selectedRareuser.user.id\n        const partialObject = {\"user\" : {\"is_staff\" : adminRadioStatus, \"id\": userId} }   \n        partialyUpdateUser(rareuserId, partialObject)\n            .then(history.push(\"/users\"))\n            .then(changeUserTypeModal.current.close())              \n    }\n\n    const showDeactivated = e => {\n        const deactivatedUsers = users.filter((rareuser) => (rareuser.user.is_active !== true))\n        if(deactivatedUsers.length === 0){\n            tempPopupModal.current.showModal()\n        } \n        setSortedUsers(deactivatedUsers)                     \n    }\n    const showAll = e => {\n        getUsers()\n            .then(history.push(\"/users\"))                     \n    }\n\n    const handleIsActive = e => {\n        const rareuserId = selectedUser\n        const selectedRareuser = users.find((rareuser)=> rareuser.id === rareuserId)\n        const userId = selectedRareuser.user.id\n        const partialObject = {\"user\" : {\"is_active\" : checkboxStatus, \"id\": userId} }   \n        partialyUpdateUser(rareuserId, partialObject)\n            .then(history.push(\"/users\"))\n            .then(deleteUserModal.current.close())\n    }\n\n    return (\n        <div>\n            <dialog className=\"dialog dialog--deleteUser\" ref={deleteUserModal}>\n                { checkboxStatus ?\n                <h4>Are you sure you want to reactivate this user?</h4>:\n                <h4>Are you sure you want to deactivate this user?</h4>\n                }                \n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                    <button className=\"deleteUser btn btn-outline-primary\" onClick={handleIsActive}>Ok</button>\n                    <button className=\"btn btn-outline-primary\" onClick={e => deleteUserModal.current.close()}>Cancel</button>\n                </div>\n            </dialog>\n            <dialog className=\"dialog \" ref={changeUserTypeModal}>\n                { adminRadioStatus ?\n                <h4>Are you sure you want to promote this user to admin?</h4>:\n                <h4>Are you sure you want to demote this user to author?</h4>                \n                }                \n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                    <button className=\"btn btn-outline-primary\" onClick={handleUserType}>Ok</button>\n                    <button className=\"btn btn-outline-primary\" onClick={e => changeUserTypeModal.current.close()}>Cancel</button>\n                </div>\n            </dialog>\n            <dialog className=\"dialog\" ref={tempPopupModal}>                \n                <h4>There are no deactivated users to show</h4>                               \n                <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n                    <button className=\"btn btn-outline-primary\" onClick={e => tempPopupModal.current.close()}>Ok</button>\n                </div>\n            </dialog>\n            <div className=\"d-flex justify-content-center mt-5\">\n            <h1>Users</h1>\n            </div>\n            <div className=\"mx-3 px-3\">\n            <button className=\"btn btn-outline-primary mr-3\" onClick={showDeactivated}>Show deactivated</button>\n            <button className=\"btn btn-outline-primary\" onClick={showAll}>Show all</button>\n            </div>  \n\n            <div className=\"users user__table mt-5 mx-3 px-3\">\n                <table className=\"table table-bordered table-striped\">\n                   \n                    <tbody>\n                        {\n                            sortedUsers.map(rareuser => (\n                                <tr key={rareuser.id}>\n                                    \n                                    <td><Link to={`/users/${rareuser.id}`}>{rareuser.user.username}</Link></td>\n                                    <td>\n                                        <span>{rareuser.user.first_name} {rareuser.user.first_name}</span>\n                                    </td>\n                                    <td>\n                                        <input type=\"checkbox\" className= \"mr-2\" name=\"isActive\" checked={rareuser.user.is_active} value={rareuser.id} onChange={(e) => {\n                                            setSelectedUser(rareuser.id)\n                                            setCheckboxStatus(e.target.checked)\n                                            deleteUserModal.current.showModal()\n                                            }} />\n                                        <label className=\"form-check-label\">Active</label>\n                                    </td>\n                                    \n                                    <td className=\"d-flex justify-content-center align-items-center\" onChange = {(e) => {\n                                        setSelectedUser(rareuser.id)\n                                        if (e.target.value === \"admin\") {\n                                            setAdminRadioStatus(true) }\n                                        else {\n                                            setAdminRadioStatus(false)\n                                        } \n                                        changeUserTypeModal.current.showModal()\n                                    }} >           \n                                        <input type=\"radio\" className=\"mr-2\" name={rareuser.user.id} checked={!(rareuser.user.is_staff)} value=\"author\" />\n                                        <label className=\"form-check-label mr-4\">Author</label>\n                                    \n                                        <input type=\"radio\" className=\"mx-2\" name={rareuser.user.id} checked={rareuser.user.is_staff} value=\"admin\" />\n                                        <label className=\"form-check-label\">Admin</label>\n                                    </td>\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/users/UserProfile.js",["164","165"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/CategoryList.js",["166"],"import React, { useContext, useState, useEffect, useRef } from \"react\"\nimport { CategoryContext } from \"./CategoryProvider\"\nimport \"./Categories.css\"\nimport Category from \"./Category\"\n\n\nexport const CategoryList = (props) => {\n  const { categories, getCategories, createCategory, updateCategory, deleteCategory } = useContext(CategoryContext)\n  const [ newCategory, setNewCategory ] = useState(\"\")\n  const [ editedCategory, setEditCategory ] = useState(\"\")\n  const [ isEditing, setIsEditing ] = useState(false)\n  const [ editCategoryId, setEditCategoryId ] = useState(0)\n  const [ deletedCategoryId, setDeletedCategoryId ] = useState(0)\n  const editCategoryModal = useRef()\n  const deleteCategoryModal = useRef()\n\n  const handleInput = (e) => {\n    if (isEditing) {\n      updateCategory({ id: editCategoryId, label: editedCategory })\n        .then(editCategoryModal.current.close())\n        .then(setEditCategory(\"\"))\n        .then(setIsEditing(false))\n    } else {\n      createCategory({ label: newCategory })\n        .then(setNewCategory(\"\"))\n    }\n  }\n\n  const editACategory = (e) => {\n    setEditCategory(e.target.dataset.categoryname)\n    setEditCategoryId(e.target.id)\n    setIsEditing(true)\n    editCategoryModal.current.showModal()\n  }\n\n  const deleteACategory = (e) => {\n    deleteCategory(deletedCategoryId)\n      .then(deleteCategoryModal.current.close())\n      .then(setDeletedCategoryId(0))\n  }\n\n  useEffect(() => {\n    getCategories()\n  }, [])\n\n  return (\n    <div className=\"d-flex flex-row justify-content-around\">\n      <dialog className=\"dialog dialog--editCategory\" ref={editCategoryModal}>\n        <div className=\"d-flex flex-column justify-content-around align-items-center\">\n          <h4>Edit this category</h4>\n          <input className=\"editCategoryInput form-control\" type=\"text\" placeholder=\"Add text\" value={editedCategory} onChange={e => {\n            setEditCategory(e.target.value)\n          }}></input>\n          <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n            <button className=\"createCategory btn btn-outline-primary\" onClick={handleInput}>Ok</button>\n            <button className=\"btn btn-outline-primary\" onClick={e => editCategoryModal.current.close()}>Cancel</button>\n          </div>\n        </div>\n      </dialog>\n      <dialog className=\"dialog dialog--deleteCategory\" ref={deleteCategoryModal}>\n        <h4>Are you sure you want to delete this category?</h4>\n        <div className=\"d-flex flex-row justify-content-around align-items-center w-100\">\n          <button className=\"deleteCategory btn btn-outline-primary\" onClick={deleteACategory}>Ok</button>\n          <button className=\"btn btn-outline-primary\" onClick={e => deleteCategoryModal.current.close()}>Cancel</button>\n        </div>\n      </dialog>\n      <div className=\"allCategories\">\n        {\n          categories.map(category => <Category key={category.id} category={category} deleteCategoryModal={deleteCategoryModal} setDeletedCategoryId={setDeletedCategoryId} editACategory={editACategory} />)\n        }\n      </div>\n      <div> \n          <div className=\"addCategoryForm d-flex flex-column justify-content-around align-items-center\">\n            <h2>Create a new category</h2>\n            <input className=\"categoryInput\" type=\"text\" placeholder=\"Add text\" value={newCategory} onChange={e => {\n              setNewCategory(e.target.value)\n            }}></input>\n            <button className=\"createCategory\" onClick={handleInput}>Create</button>\n          </div>\n        </div>\n    </div>\n  )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/nav/NavBar.js",["167","168"],"import React, { useContext, useEffect, useState } from \"react\"\nimport { AuthContext } from '../auth/AuthProvider'\nimport { Link, useHistory } from \"react-router-dom\"\n\nimport \"./NavBar.css\"\nimport Logo from \"./rare.jpeg\"\n\nexport const NavBar = () => {\n    const { getUserAdminStatus, isAdmin } = useContext(AuthContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        getUserAdminStatus()\n    }, [])\n\n    return (\n        <ul className=\"mt-3\">\n            <div className=\"d-flex flex-row flex-nowrap\">\n                <li className=\"navbar__item mx-3\">\n                    <Link to=\"/\">\n                        <img className=\"navbar__logo\" alt=\"\" src={Logo} />\n                    </Link>\n                </li>\n                <li className=\"navbar__item mx-3\">\n                    <div className=\"d-flex justify-content-center\">\n                        <Link to=\"/posts\" className=\"btn btn-outline-primary w-100\">All Posts</Link>\n                    </div>\n                </li>\n                <li className=\"navbar__item mx-3\">\n                    <div className=\"d-flex justify-content-center\">\n                        <Link to=\"/user/posts\" className=\"btn btn-outline-primary w-100\">My Posts</Link>\n                    </div>\n                </li>\n                {isAdmin ? (\n                    <li className=\"navbar__item mx-3\">\n                        <div className=\"d-flex justify-content-center\">\n                            <Link to=\"/categories\" className=\"btn btn-outline-primary w-100\">Category Manager</Link>\n                        </div>\n                    </li>\n                ) : (<></>)}\n                {isAdmin ? (\n                    <li className=\"navbar__item mx-3\">\n                        <div className=\"d-flex justify-content-center\">\n                            <Link to=\"/tags\" className=\"btn btn-outline-primary w-100\">Tag Manager</Link>\n                        </div>\n                    </li>\n                ) : (<></>)}\n                {/* Change 'true' to whatever the is_admin check will be */}\n                {isAdmin ? (\n                    <li className=\"navbar__item mx-3\">\n                        <div className=\"d-flex justify-content-center\">\n                            <Link to=\"/users\" className=\"btn btn-outline-primary w-100\">User Manager</Link>\n                        </div>\n                    </li>\n                ) : (<></>)}\n                {\n                    (localStorage.getItem(\"rare_user_id\") !== null) ?\n                        <li className=\"navbar__item ml-auto mr-3\">\n                            <div className=\"d-flex justify-content-center\">\n                                <button className=\"btn btn-outline-primary w-100\"\n                                    onClick={() => {\n                                        localStorage.removeItem(\"rare_user_id\");\n                                        history.push({ pathname: \"/\" });\n                                    }}\n                                >Logout</button>\n                            </div>\n                        </li> :\n                        <>\n                            <li className=\"navbar__item\">\n                                <Link className=\"nav-link\" to=\"/login\">Login</Link>\n                            </li>\n                            <li className=\"navbar__item\">\n                                <Link className=\"nav-link\" to=\"/register\">Register</Link>\n                            </li>\n                        </>\n                }\n            </div>\n        </ul>\n    )\n}\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/tags/tag.js",["169"],"import React from \"react\"\nimport \"./tag.css\"\n\nexport default (props) => (\n  <div className=\"tags\">\n    <div className=\"tagicon\"><i className=\"fas fa-cog\" id={props.tag.id} data-tagname={props.tag.label} onClick={props.editATag} ></i></div>\n    <div className=\"tagicon\"><i className=\"far fa-trash-alt\" id={props.tag.id} onClick={e => {\n        props.setDeletedTagId(props.tag.id)\n        props.deleteTagDialog.current.showModal() \n      }\n    }></i></div>\n    <div className=\"tagname\">{props.tag.label}</div>\n  </div>\n)\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/comments/Comment.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/posts/Post.js",["170","171"],"import React from \"react\"\nimport \"./Posts.css\"\nimport { Link } from \"react-router-dom\"\n\nexport default (props) => (\n    <section className=\"post p-5 mb-5 border\">\n        <div className=\"d-flex flex-row justify-content-between\">\n            <h3 className=\"post__title\">\n                <Link to={`/posts/${props.post.id}`}>\n                    {props.post.title}\n                </Link>\n            </h3>\n            <small>Publication Date: {props.post.publication_date}</small>\n        </div>\n        <div className=\"d-flex flex-row justify-content-center\">\n            <img className=\"mb-5 img-fluid\" src=\"https://via.placeholder.com/400x200\" />\n        </div>\n        <div className=\"d-flex flex-row justify-content-between align-items-center\">\n            <div className=\"\">Author: {props.post.rareuser && props.post.rareuser.user.first_name} {props.post.rareuser && props.post.rareuser.user.last_name}</div>\n            <div className=\"d-flex flex-row justify-content-between align-items-center\">\n                <div className=\"border rounded-pill p-2\"><small># Reaction Count</small></div>\n                <Link to={`/posts/edit/${props.post.id}`}>\n                    <div className=\"posticon\"><i className=\"fas fa-cog fa-2x\"></i></div>\n                </Link>\n                <div className=\"posticon\"><i className=\"far fa-trash-alt fa-2x post__hover__delete\" id={props.post.id} onClick={e => {\n                    props.setDeletePostId(props.post.id)\n                    props.deletePostModal.current.showModal()\n                }}></i></div>\n            </div>\n        </div>\n    </section>\n)\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/categories/Category.js",["172"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./Categories.css\"\n\nexport default (props) => (\n  <div className=\"categories\">\n    <div className=\"categoryicon\"><i className=\"fas fa-cog fa-2x\" id={props.category.id} data-categoryname={props.category.label} onClick={props.editACategory}></i></div>\n    <div className=\"categoryicon\"><i className=\"far fa-trash-alt fa-2x\" id={props.category.id} onClick={e => {\n      props.setDeletedCategoryId(props.category.id)\n      props.deleteCategoryModal.current.showModal() \n    }\n    }></i></div>\n    <div className=\"category__table\">\n      <table className=\"table table-bordered\">\n        <tbody>\n          <tr>\n            <td><Link to={`/categories/${props.category.id}`}>{props.category.label}</Link></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n)\n","/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/reactions/ReactionProvider.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/reactions/ReactionSelector.js",["173"],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/reactions/PostReaction.js",[],"/Users/phonesalo/workspace/python/rare-rest/rare-publishing-arches/src/components/reactions/ReactionForm.js",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":14},{"ruleId":"182","severity":1,"message":"183","line":61,"column":25,"nodeType":"184","endLine":61,"endColumn":101},{"ruleId":"182","severity":1,"message":"183","line":54,"column":21,"nodeType":"184","endLine":54,"endColumn":86},{"ruleId":"185","severity":1,"message":"186","line":25,"column":8,"nodeType":"187","endLine":25,"endColumn":10,"suggestions":"188"},{"ruleId":"185","severity":1,"message":"189","line":29,"column":8,"nodeType":"187","endLine":29,"endColumn":10,"suggestions":"190"},{"ruleId":"185","severity":1,"message":"191","line":77,"column":8,"nodeType":"187","endLine":77,"endColumn":24,"suggestions":"192"},{"ruleId":"182","severity":1,"message":"183","line":105,"column":21,"nodeType":"184","endLine":105,"endColumn":103},{"ruleId":"178","severity":1,"message":"193","line":10,"column":13,"nodeType":"180","messageId":"181","endLine":10,"endColumn":17},{"ruleId":"178","severity":1,"message":"194","line":10,"column":28,"nodeType":"180","messageId":"181","endLine":10,"endColumn":38},{"ruleId":"185","severity":1,"message":"195","line":37,"column":8,"nodeType":"187","endLine":37,"endColumn":10,"suggestions":"196"},{"ruleId":"185","severity":1,"message":"197","line":47,"column":8,"nodeType":"187","endLine":47,"endColumn":21,"suggestions":"198"},{"ruleId":"185","severity":1,"message":"199","line":60,"column":8,"nodeType":"187","endLine":60,"endColumn":15,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":106,"column":75,"nodeType":"203","messageId":"204","endLine":106,"endColumn":77},{"ruleId":"185","severity":1,"message":"205","line":42,"column":6,"nodeType":"187","endLine":42,"endColumn":8,"suggestions":"206"},{"ruleId":"185","severity":1,"message":"207","line":84,"column":8,"nodeType":"187","endLine":84,"endColumn":10,"suggestions":"208"},{"ruleId":"185","severity":1,"message":"209","line":89,"column":8,"nodeType":"187","endLine":89,"endColumn":15,"suggestions":"210"},{"ruleId":"185","severity":1,"message":"211","line":93,"column":8,"nodeType":"187","endLine":93,"endColumn":20,"suggestions":"212"},{"ruleId":"185","severity":1,"message":"213","line":36,"column":8,"nodeType":"187","endLine":36,"endColumn":10,"suggestions":"214"},{"ruleId":"185","severity":1,"message":"215","line":43,"column":8,"nodeType":"187","endLine":43,"endColumn":21,"suggestions":"216"},{"ruleId":"185","severity":1,"message":"217","line":55,"column":8,"nodeType":"187","endLine":55,"endColumn":10,"suggestions":"218"},{"ruleId":"185","severity":1,"message":"219","line":27,"column":6,"nodeType":"187","endLine":27,"endColumn":8,"suggestions":"220"},{"ruleId":"201","severity":1,"message":"202","line":40,"column":56,"nodeType":"203","messageId":"204","endLine":40,"endColumn":58},{"ruleId":"185","severity":1,"message":"221","line":30,"column":8,"nodeType":"187","endLine":30,"endColumn":10,"suggestions":"222"},{"ruleId":"178","severity":1,"message":"223","line":7,"column":13,"nodeType":"180","messageId":"181","endLine":7,"endColumn":20},{"ruleId":"185","severity":1,"message":"224","line":20,"column":8,"nodeType":"187","endLine":20,"endColumn":10,"suggestions":"225"},{"ruleId":"185","severity":1,"message":"226","line":14,"column":8,"nodeType":"187","endLine":14,"endColumn":10,"suggestions":"227"},{"ruleId":"185","severity":1,"message":"228","line":18,"column":8,"nodeType":"187","endLine":18,"endColumn":10,"suggestions":"229"},{"ruleId":"185","severity":1,"message":"230","line":44,"column":6,"nodeType":"187","endLine":44,"endColumn":8,"suggestions":"231"},{"ruleId":"178","severity":1,"message":"232","line":1,"column":40,"nodeType":"180","messageId":"181","endLine":1,"endColumn":48},{"ruleId":"185","severity":1,"message":"233","line":14,"column":8,"nodeType":"187","endLine":14,"endColumn":10,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":4,"column":1,"nodeType":"237","endLine":14,"endColumn":2},{"ruleId":"235","severity":1,"message":"236","line":5,"column":1,"nodeType":"237","endLine":32,"endColumn":2},{"ruleId":"182","severity":1,"message":"183","line":16,"column":13,"nodeType":"184","endLine":16,"endColumn":89},{"ruleId":"235","severity":1,"message":"236","line":5,"column":1,"nodeType":"237","endLine":23,"endColumn":2},{"ruleId":"178","severity":1,"message":"238","line":11,"column":97,"nodeType":"180","messageId":"181","endLine":11,"endColumn":114},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPostById' and 'props.match.params.postId'. Either include them or remove the dependency array.","ArrayExpression",["241"],"React Hook useEffect has a missing dependency: 'getReactions'. Either include it or remove the dependency array.",["242"],"React Hook useEffect has a missing dependency: 'post.reactions'. Either include it or remove the dependency array.",["243"],"'tags' is assigned a value but never used.","'searchTags' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPosts' and 'getTags'. Either include them or remove the dependency array.",["244"],"React Hook useEffect has missing dependencies: 'isAdmin' and 'posts'. Either include them or remove the dependency array.",["245"],"React Hook useEffect has a missing dependency: 'isAdmin'. Either include it or remove the dependency array.",["246"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getTags'. Either include it or remove the dependency array.",["247"],"React Hook useEffect has missing dependencies: 'getCategories', 'getPosts', and 'getTags'. Either include them or remove the dependency array.",["248"],"React Hook useEffect has a missing dependency: 'getPostInEditMode'. Either include it or remove the dependency array.",["249"],"React Hook useEffect has a missing dependency: 'createNewTags'. Either include it or remove the dependency array.",["250"],"React Hook useEffect has missing dependencies: 'getPosts', 'getPostsByCurrentUserId', 'getPostsByUserId', 'props.location', and 'props.match.params.userId'. Either include them or remove the dependency array.",["251"],"React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.",["252"],"React Hook useEffect has missing dependencies: 'getUserById' and 'props.match'. Either include them or remove the dependency array.",["253"],"React Hook useEffect has missing dependencies: 'getPostByCategoryId' and 'props.match.params.categoryId'. Either include them or remove the dependency array.",["254"],"React Hook useEffect has missing dependencies: 'getCommentsByPostId' and 'postId'. Either include them or remove the dependency array.",["255"],"'isAdmin' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["256"],"React Hook useEffect has missing dependencies: 'getUserById' and 'props.match.params.userId'. Either include them or remove the dependency array.",["257"],"React Hook useEffect has a missing dependency: 'getSubscriptions'. Either include it or remove the dependency array.",["258"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["259"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getUserAdminStatus'. Either include it or remove the dependency array.",["260"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'getReactionCounts' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},"Update the dependencies array to be: [getPostById, props.match.params.postId]",{"range":"301","text":"302"},"Update the dependencies array to be: [getReactions]",{"range":"303","text":"304"},"Update the dependencies array to be: [post.reactions, reactionCounts]",{"range":"305","text":"306"},"Update the dependencies array to be: [getPosts, getTags]",{"range":"307","text":"308"},"Update the dependencies array to be: [isAdmin, posts, searchTerms]",{"range":"309","text":"310"},"Update the dependencies array to be: [isAdmin, posts]",{"range":"311","text":"312"},"Update the dependencies array to be: [getTags]",{"range":"313","text":"314"},"Update the dependencies array to be: [getCategories, getPosts, getTags]",{"range":"315","text":"316"},"Update the dependencies array to be: [getPostInEditMode, posts]",{"range":"317","text":"318"},"Update the dependencies array to be: [createNewTags, post, tags]",{"range":"319","text":"320"},"Update the dependencies array to be: [getPosts, getPostsByCurrentUserId, getPostsByUserId, props.location, props.match.params.userId]",{"range":"321","text":"322"},"Update the dependencies array to be: [posts, searchTerms]",{"range":"323","text":"324"},"Update the dependencies array to be: [getUserById, props.match]",{"range":"325","text":"326"},"Update the dependencies array to be: [getPostByCategoryId, props.match.params.categoryId]",{"range":"327","text":"328"},"Update the dependencies array to be: [getCommentsByPostId, postId]",{"range":"329","text":"330"},"Update the dependencies array to be: [getUsers]",{"range":"331","text":"332"},"Update the dependencies array to be: [getUserById, props.match.params.userId]",{"range":"333","text":"334"},"Update the dependencies array to be: [getSubscriptions]",{"range":"335","text":"336"},"Update the dependencies array to be: [getCategories]",{"range":"337","text":"338"},"Update the dependencies array to be: [getUserAdminStatus]",{"range":"339","text":"340"},[1024,1026],"[getPostById, props.match.params.postId]",[1081,1083],"[getReactions]",[2845,2861],"[post.reactions, reactionCounts]",[1374,1376],"[getPosts, getTags]",[1925,1938],"[isAdmin, posts, searchTerms]",[2462,2469],"[isAdmin, posts]",[1226,1228],"[getTags]",[2967,2969],"[getCategories, getPosts, getTags]",[3097,3104],"[getPostInEditMode, posts]",[3160,3172],"[createNewTags, post, tags]",[1370,1372],"[getPosts, getPostsByCurrentUserId, getPostsByUserId, props.location, props.match.params.userId]",[1766,1779],"[posts, searchTerms]",[2275,2277],"[getUserById, props.match]",[823,825],"[getPostByCategoryId, props.match.params.categoryId]",[1135,1137],"[getCommentsByPostId, postId]",[769,771],"[getUsers]",[546,548],"[getUserById, props.match.params.userId]",[605,607],"[getSubscriptions]",[1454,1456],"[getCategories]",[413,415],"[getUserAdminStatus]"]